{"version":3,"file":"pointerUtils.js","sources":["pointerUtils.ts"],"sourcesContent":["import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords(dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas(targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity(targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords(targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer(pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY(type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as 'pageX']\n  xy.y = pointer[(type + 'Y') as 'pageY']\n\n  return xy\n}\n\nexport function getPageXY(pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY(pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId(pointer: { pointerId?: number; identifier?: number; type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords(dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair(event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage(pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox(event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType(pointer: { pointerType?: string; identifier?: number; type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets(event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : (event as unknown as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords(): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent(coords: MockCoords) {\n  const event = {\n    coords,\n    get page() {\n      return this.coords.page\n    },\n    get client() {\n      return this.coords.client\n    },\n    get timeStamp() {\n      return this.coords.timeStamp\n    },\n    get pageX() {\n      return this.coords.page.x\n    },\n    get pageY() {\n      return this.coords.page.y\n    },\n    get clientX() {\n      return this.coords.client.x\n    },\n    get clientY() {\n      return this.coords.client.y\n    },\n    get pointerId() {\n      return this.coords.pointerId\n    },\n    get target() {\n      return this.coords.target\n    },\n    get type() {\n      return this.coords.type\n    },\n    get pointerType() {\n      return this.coords.pointerType\n    },\n    get buttons() {\n      return this.coords.buttons\n    },\n    preventDefault() {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n"],"names":["copyCoords","dest","src","page","x","y","client","timeStamp","setCoordDeltas","targetObj","prev","cur","setCoordVelocity","delta","dt","Math","max","setZeroCoords","isNativePointer","pointer","dom","Event","Touch","getXY","type","xy","getPageXY","browser","isOperaMobile","window","scrollX","scrollY","getClientXY","getPointerId","is","number","pointerId","identifier","setCoords","pointers","length","pointerAverage","getTouchPair","event","touches","array","changedTouches","average","pageX","pageY","clientX","clientY","screenX","screenY","prop","touchBBox","minX","min","minY","maxX","maxY","left","top","right","bottom","width","height","touchDistance","deltaSource","sourceX","sourceY","dx","dy","hypot","touchAngle","angle","atan2","PI","getPointerType","string","pointerType","undefined","test","getEventTargets","path","func","composedPath","domUtils","target","currentTarget","newCoords","coordsToEvent","coords","buttons","preventDefault"],"mappings":";;;;;;;;;;;;;;;;;AAUO,SAASA,UAAUA,CAACC,IAAqB,EAAEC,GAAoB,EAAE;EACtED,IAAI,CAACE,IAAI,GAAGF,IAAI,CAACE,IAAI,IAAK,EAAU,CAAA;EACpCF,IAAI,CAACE,IAAI,CAACC,CAAC,GAAGF,GAAG,CAACC,IAAI,CAACC,CAAC,CAAA;EACxBH,IAAI,CAACE,IAAI,CAACE,CAAC,GAAGH,GAAG,CAACC,IAAI,CAACE,CAAC,CAAA;EAExBJ,IAAI,CAACK,MAAM,GAAGL,IAAI,CAACK,MAAM,IAAK,EAAU,CAAA;EACxCL,IAAI,CAACK,MAAM,CAACF,CAAC,GAAGF,GAAG,CAACI,MAAM,CAACF,CAAC,CAAA;EAC5BH,IAAI,CAACK,MAAM,CAACD,CAAC,GAAGH,GAAG,CAACI,MAAM,CAACD,CAAC,CAAA;AAE5BJ,EAAAA,IAAI,CAACM,SAAS,GAAGL,GAAG,CAACK,SAAS,CAAA;AAChC,CAAA;AAEO,SAASC,cAAcA,CAACC,SAA0B,EAAEC,IAAqB,EAAEC,GAAoB,EAAE;AACtGF,EAAAA,SAAS,CAACN,IAAI,CAACC,CAAC,GAAGO,GAAG,CAACR,IAAI,CAACC,CAAC,GAAGM,IAAI,CAACP,IAAI,CAACC,CAAC,CAAA;AAC3CK,EAAAA,SAAS,CAACN,IAAI,CAACE,CAAC,GAAGM,GAAG,CAACR,IAAI,CAACE,CAAC,GAAGK,IAAI,CAACP,IAAI,CAACE,CAAC,CAAA;AAC3CI,EAAAA,SAAS,CAACH,MAAM,CAACF,CAAC,GAAGO,GAAG,CAACL,MAAM,CAACF,CAAC,GAAGM,IAAI,CAACJ,MAAM,CAACF,CAAC,CAAA;AACjDK,EAAAA,SAAS,CAACH,MAAM,CAACD,CAAC,GAAGM,GAAG,CAACL,MAAM,CAACD,CAAC,GAAGK,IAAI,CAACJ,MAAM,CAACD,CAAC,CAAA;EACjDI,SAAS,CAACF,SAAS,GAAGI,GAAG,CAACJ,SAAS,GAAGG,IAAI,CAACH,SAAS,CAAA;AACtD,CAAA;AAEO,SAASK,gBAAgBA,CAACH,SAA0B,EAAEI,KAAsB,EAAE;AACnF,EAAA,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,CAACN,SAAS,GAAG,IAAI,EAAE,KAAK,CAAC,CAAA;EAElDE,SAAS,CAACN,IAAI,CAACC,CAAC,GAAGS,KAAK,CAACV,IAAI,CAACC,CAAC,GAAGU,EAAE,CAAA;EACpCL,SAAS,CAACN,IAAI,CAACE,CAAC,GAAGQ,KAAK,CAACV,IAAI,CAACE,CAAC,GAAGS,EAAE,CAAA;EACpCL,SAAS,CAACH,MAAM,CAACF,CAAC,GAAGS,KAAK,CAACP,MAAM,CAACF,CAAC,GAAGU,EAAE,CAAA;EACxCL,SAAS,CAACH,MAAM,CAACD,CAAC,GAAGQ,KAAK,CAACP,MAAM,CAACD,CAAC,GAAGS,EAAE,CAAA;EACxCL,SAAS,CAACF,SAAS,GAAGO,EAAE,CAAA;AAC1B,CAAA;AAEO,SAASG,aAAaA,CAACR,SAA0B,EAAE;AACxDA,EAAAA,SAAS,CAACN,IAAI,CAACC,CAAC,GAAG,CAAC,CAAA;AACpBK,EAAAA,SAAS,CAACN,IAAI,CAACE,CAAC,GAAG,CAAC,CAAA;AACpBI,EAAAA,SAAS,CAACH,MAAM,CAACF,CAAC,GAAG,CAAC,CAAA;AACtBK,EAAAA,SAAS,CAACH,MAAM,CAACD,CAAC,GAAG,CAAC,CAAA;AACxB,CAAA;AAEO,SAASa,eAAeA,CAACC,OAAY,EAAE;EAC5C,OAAOA,OAAO,YAAYC,UAAG,CAACC,KAAK,IAAIF,OAAO,YAAYC,UAAG,CAACE,KAAK,CAAA;AACrE,CAAA;;AAEA;AACO,SAASC,KAAKA,CAACC,IAAY,EAAEL,OAAoC,EAAEM,EAAS,EAAE;AACnFA,EAAAA,EAAE,GAAGA,EAAE,IAAK,EAAY,CAAA;EACxBD,IAAI,GAAGA,IAAI,IAAI,MAAM,CAAA;EAErBC,EAAE,CAACrB,CAAC,GAAGe,OAAO,CAAEK,IAAI,GAAG,GAAG,CAAa,CAAA;EACvCC,EAAE,CAACpB,CAAC,GAAGc,OAAO,CAAEK,IAAI,GAAG,GAAG,CAAa,CAAA;AAEvC,EAAA,OAAOC,EAAE,CAAA;AACX,CAAA;AAEO,SAASC,SAASA,CAACP,OAAoC,EAAEhB,IAAY,EAAE;EAC5EA,IAAI,GAAGA,IAAI,IAAI;AAAEC,IAAAA,CAAC,EAAE,CAAC;AAAEC,IAAAA,CAAC,EAAE,CAAA;GAAG,CAAA;;AAE7B;EACA,IAAIsB,OAAO,CAACC,aAAa,IAAIV,eAAe,CAACC,OAAO,CAAC,EAAE;AACrDI,IAAAA,KAAK,CAAC,QAAQ,EAAEJ,OAAO,EAAEhB,IAAI,CAAC,CAAA;AAE9BA,IAAAA,IAAI,CAACC,CAAC,IAAIyB,MAAM,CAACC,OAAO,CAAA;AACxB3B,IAAAA,IAAI,CAACE,CAAC,IAAIwB,MAAM,CAACE,OAAO,CAAA;AAC1B,GAAC,MAAM;AACLR,IAAAA,KAAK,CAAC,MAAM,EAAEJ,OAAO,EAAEhB,IAAI,CAAC,CAAA;AAC9B,GAAA;AAEA,EAAA,OAAOA,IAAI,CAAA;AACb,CAAA;AAEO,SAAS6B,WAAWA,CAACb,OAAoB,EAAEb,MAAa,EAAE;AAC/DA,EAAAA,MAAM,GAAGA,MAAM,IAAK,EAAU,CAAA;EAE9B,IAAIqB,OAAO,CAACC,aAAa,IAAIV,eAAe,CAACC,OAAO,CAAC,EAAE;AACrD;AACAI,IAAAA,KAAK,CAAC,QAAQ,EAAEJ,OAAO,EAAEb,MAAM,CAAC,CAAA;AAClC,GAAC,MAAM;AACLiB,IAAAA,KAAK,CAAC,QAAQ,EAAEJ,OAAO,EAAEb,MAAM,CAAC,CAAA;AAClC,GAAA;AAEA,EAAA,OAAOA,MAAM,CAAA;AACf,CAAA;AAEO,SAAS2B,YAAYA,CAACd,OAAmE,EAAE;AAChG,EAAA,OAAOe,EAAE,CAACC,MAAM,CAAChB,OAAO,CAACiB,SAAS,CAAC,GAAGjB,OAAO,CAACiB,SAAS,GAAIjB,OAAO,CAACkB,UAAW,CAAA;AAChF,CAAA;AAEO,SAASC,SAASA,CAACrC,IAAqB,EAAEsC,QAAe,EAAEhC,SAAiB,EAAE;AACnF,EAAA,MAAMY,OAAO,GAAGoB,QAAQ,CAACC,MAAM,GAAG,CAAC,GAAGC,cAAc,CAACF,QAAQ,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC,CAAA;AAE5Eb,EAAAA,SAAS,CAACP,OAAO,EAAElB,IAAI,CAACE,IAAI,CAAC,CAAA;AAC7B6B,EAAAA,WAAW,CAACb,OAAO,EAAElB,IAAI,CAACK,MAAM,CAAC,CAAA;EAEjCL,IAAI,CAACM,SAAS,GAAGA,SAAS,CAAA;AAC5B,CAAA;AAEO,SAASmC,YAAYA,CAACC,KAAiC,EAAE;EAC9D,MAAMC,OAAsB,GAAG,EAAE,CAAA;;AAEjC;AACA,EAAA,IAAIV,EAAE,CAACW,KAAK,CAACF,KAAK,CAAC,EAAE;AACnBC,IAAAA,OAAO,CAAC,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC,CAAA;AACrBC,IAAAA,OAAO,CAAC,CAAC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC,CAAA;AACvB,GAAA;AACA;OACK;AACH,IAAA,IAAIA,KAAK,CAACnB,IAAI,KAAK,UAAU,EAAE;AAC7B,MAAA,IAAImB,KAAK,CAACC,OAAO,CAACJ,MAAM,KAAK,CAAC,EAAE;QAC9BI,OAAO,CAAC,CAAC,CAAC,GAAGD,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAA;QAC7BA,OAAO,CAAC,CAAC,CAAC,GAAGD,KAAK,CAACG,cAAc,CAAC,CAAC,CAAC,CAAA;OACrC,MAAM,IAAIH,KAAK,CAACC,OAAO,CAACJ,MAAM,KAAK,CAAC,EAAE;QACrCI,OAAO,CAAC,CAAC,CAAC,GAAGD,KAAK,CAACG,cAAc,CAAC,CAAC,CAAC,CAAA;QACpCF,OAAO,CAAC,CAAC,CAAC,GAAGD,KAAK,CAACG,cAAc,CAAC,CAAC,CAAC,CAAA;AACtC,OAAA;AACF,KAAC,MAAM;MACLF,OAAO,CAAC,CAAC,CAAC,GAAGD,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAA;MAC7BA,OAAO,CAAC,CAAC,CAAC,GAAGD,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAA;AAC/B,KAAA;AACF,GAAA;AAEA,EAAA,OAAOA,OAAO,CAAA;AAChB,CAAA;AAEO,SAASH,cAAcA,CAACF,QAAuB,EAAE;AACtD,EAAA,MAAMQ,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE,CAAC;AACRC,IAAAA,KAAK,EAAE,CAAC;AACRC,IAAAA,OAAO,EAAE,CAAC;AACVC,IAAAA,OAAO,EAAE,CAAC;AACVC,IAAAA,OAAO,EAAE,CAAC;AACVC,IAAAA,OAAO,EAAE,CAAA;GACV,CAAA;AAID,EAAA,KAAK,MAAMlC,OAAO,IAAIoB,QAAQ,EAAE;AAC9B,IAAA,KAAK,MAAMe,IAAI,IAAIP,OAAO,EAAE;AAC1BA,MAAAA,OAAO,CAACO,IAAI,CAAc,IAAInC,OAAO,CAACmC,IAAI,CAAc,CAAA;AAC1D,KAAA;AACF,GAAA;AACA,EAAA,KAAK,MAAMA,IAAI,IAAIP,OAAO,EAAE;AAC1BA,IAAAA,OAAO,CAACO,IAAI,CAAc,IAAIf,QAAQ,CAACC,MAAM,CAAA;AAC/C,GAAA;AAEA,EAAA,OAAOO,OAAO,CAAA;AAChB,CAAA;AAEO,SAASQ,SAASA,CAACZ,KAAoB,EAAE;AAC9C,EAAA,IAAI,CAACA,KAAK,CAACH,MAAM,EAAE;AACjB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA,EAAA,MAAMI,OAAO,GAAGF,YAAY,CAACC,KAAK,CAAC,CAAA;AACnC,EAAA,MAAMa,IAAI,GAAGzC,IAAI,CAAC0C,GAAG,CAACb,OAAO,CAAC,CAAC,CAAC,CAACI,KAAK,EAAEJ,OAAO,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC,CAAA;AACzD,EAAA,MAAMU,IAAI,GAAG3C,IAAI,CAAC0C,GAAG,CAACb,OAAO,CAAC,CAAC,CAAC,CAACK,KAAK,EAAEL,OAAO,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC,CAAA;AACzD,EAAA,MAAMU,IAAI,GAAG5C,IAAI,CAACC,GAAG,CAAC4B,OAAO,CAAC,CAAC,CAAC,CAACI,KAAK,EAAEJ,OAAO,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC,CAAA;AACzD,EAAA,MAAMY,IAAI,GAAG7C,IAAI,CAACC,GAAG,CAAC4B,OAAO,CAAC,CAAC,CAAC,CAACK,KAAK,EAAEL,OAAO,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC,CAAA;EAEzD,OAAO;AACL7C,IAAAA,CAAC,EAAEoD,IAAI;AACPnD,IAAAA,CAAC,EAAEqD,IAAI;AACPG,IAAAA,IAAI,EAAEL,IAAI;AACVM,IAAAA,GAAG,EAAEJ,IAAI;AACTK,IAAAA,KAAK,EAAEJ,IAAI;AACXK,IAAAA,MAAM,EAAEJ,IAAI;IACZK,KAAK,EAAEN,IAAI,GAAGH,IAAI;IAClBU,MAAM,EAAEN,IAAI,GAAGF,IAAAA;GAChB,CAAA;AACH,CAAA;AAEO,SAASS,aAAaA,CAACxB,KAAiC,EAAEyB,WAAmB,EAAE;AACpF,EAAA,MAAMC,OAAO,GAAID,WAAW,GAAG,GAAe,CAAA;AAC9C,EAAA,MAAME,OAAO,GAAIF,WAAW,GAAG,GAAe,CAAA;AAC9C,EAAA,MAAMxB,OAAO,GAAGF,YAAY,CAACC,KAAK,CAAC,CAAA;AAEnC,EAAA,MAAM4B,EAAE,GAAG3B,OAAO,CAAC,CAAC,CAAC,CAACyB,OAAO,CAAC,GAAGzB,OAAO,CAAC,CAAC,CAAC,CAACyB,OAAO,CAAC,CAAA;AACpD,EAAA,MAAMG,EAAE,GAAG5B,OAAO,CAAC,CAAC,CAAC,CAAC0B,OAAO,CAAC,GAAG1B,OAAO,CAAC,CAAC,CAAC,CAAC0B,OAAO,CAAC,CAAA;AAEpD,EAAA,OAAOG,KAAK,CAACF,EAAE,EAAEC,EAAE,CAAC,CAAA;AACtB,CAAA;AAEO,SAASE,UAAUA,CAAC/B,KAAiC,EAAEyB,WAAmB,EAAE;AACjF,EAAA,MAAMC,OAAO,GAAID,WAAW,GAAG,GAAe,CAAA;AAC9C,EAAA,MAAME,OAAO,GAAIF,WAAW,GAAG,GAAe,CAAA;AAC9C,EAAA,MAAMxB,OAAO,GAAGF,YAAY,CAACC,KAAK,CAAC,CAAA;AACnC,EAAA,MAAM4B,EAAE,GAAG3B,OAAO,CAAC,CAAC,CAAC,CAACyB,OAAO,CAAC,GAAGzB,OAAO,CAAC,CAAC,CAAC,CAACyB,OAAO,CAAC,CAAA;AACpD,EAAA,MAAMG,EAAE,GAAG5B,OAAO,CAAC,CAAC,CAAC,CAAC0B,OAAO,CAAC,GAAG1B,OAAO,CAAC,CAAC,CAAC,CAAC0B,OAAO,CAAC,CAAA;AACpD,EAAA,MAAMK,KAAK,GAAI,GAAG,GAAG5D,IAAI,CAAC6D,KAAK,CAACJ,EAAE,EAAED,EAAE,CAAC,GAAIxD,IAAI,CAAC8D,EAAE,CAAA;AAElD,EAAA,OAAOF,KAAK,CAAA;AACd,CAAA;AAEO,SAASG,cAAcA,CAAC3D,OAAqE,EAAE;AACpG,EAAA,OAAOe,EAAE,CAAC6C,MAAM,CAAC5D,OAAO,CAAC6D,WAAW,CAAC,GACjC7D,OAAO,CAAC6D,WAAW,GACnB9C,EAAE,CAACC,MAAM,CAAChB,OAAO,CAAC6D,WAAW,CAAC,GAC5B,CAACC,SAAS,EAAEA,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC9D,OAAO,CAAC6D,WAAW,CAAC;AACpE;AACA;AACA,EAAA,OAAO,CAACE,IAAI,CAAC/D,OAAO,CAACK,IAAI,IAAI,EAAE,CAAC,IAAIL,OAAO,YAAYC,UAAG,CAACE,KAAK,GAC9D,OAAO,GACP,OAAO,CAAA;AACjB,CAAA;;AAEA;AACO,SAAS6D,eAAeA,CAACxC,KAAY,EAAE;AAC5C,EAAA,MAAMyC,IAAI,GAAGlD,EAAE,CAACmD,IAAI,CAAC1C,KAAK,CAAC2C,YAAY,CAAC,GACnC3C,KAAK,CAAC2C,YAAY,EAAE,GACpB3C,KAAK,CAAoCyC,IAAI,CAAA;EAElD,OAAO,CACLG,gBAAyB,CAACH,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAIzC,KAAK,CAAC6C,MAAkB,CAAC,EACrED,gBAAyB,CAAC5C,KAAK,CAAC8C,aAAwB,CAAC,CAC1D,CAAA;AACH,CAAA;AAEO,SAASC,SAASA,GAAoB;EAC3C,OAAO;AACLvF,IAAAA,IAAI,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAC;AAAEC,MAAAA,CAAC,EAAE,CAAA;KAAG;AACpBC,IAAAA,MAAM,EAAE;AAAEF,MAAAA,CAAC,EAAE,CAAC;AAAEC,MAAAA,CAAC,EAAE,CAAA;KAAG;AACtBE,IAAAA,SAAS,EAAE,CAAA;GACZ,CAAA;AACH,CAAA;AAEO,SAASoF,aAAaA,CAACC,MAAkB,EAAE;AAChD,EAAA,MAAMjD,KAAK,GAAG;IACZiD,MAAM;IACN,IAAIzF,IAAIA,GAAG;AACT,MAAA,OAAO,IAAI,CAACyF,MAAM,CAACzF,IAAI,CAAA;KACxB;IACD,IAAIG,MAAMA,GAAG;AACX,MAAA,OAAO,IAAI,CAACsF,MAAM,CAACtF,MAAM,CAAA;KAC1B;IACD,IAAIC,SAASA,GAAG;AACd,MAAA,OAAO,IAAI,CAACqF,MAAM,CAACrF,SAAS,CAAA;KAC7B;IACD,IAAIyC,KAAKA,GAAG;AACV,MAAA,OAAO,IAAI,CAAC4C,MAAM,CAACzF,IAAI,CAACC,CAAC,CAAA;KAC1B;IACD,IAAI6C,KAAKA,GAAG;AACV,MAAA,OAAO,IAAI,CAAC2C,MAAM,CAACzF,IAAI,CAACE,CAAC,CAAA;KAC1B;IACD,IAAI6C,OAAOA,GAAG;AACZ,MAAA,OAAO,IAAI,CAAC0C,MAAM,CAACtF,MAAM,CAACF,CAAC,CAAA;KAC5B;IACD,IAAI+C,OAAOA,GAAG;AACZ,MAAA,OAAO,IAAI,CAACyC,MAAM,CAACtF,MAAM,CAACD,CAAC,CAAA;KAC5B;IACD,IAAI+B,SAASA,GAAG;AACd,MAAA,OAAO,IAAI,CAACwD,MAAM,CAACxD,SAAS,CAAA;KAC7B;IACD,IAAIoD,MAAMA,GAAG;AACX,MAAA,OAAO,IAAI,CAACI,MAAM,CAACJ,MAAM,CAAA;KAC1B;IACD,IAAIhE,IAAIA,GAAG;AACT,MAAA,OAAO,IAAI,CAACoE,MAAM,CAACpE,IAAI,CAAA;KACxB;IACD,IAAIwD,WAAWA,GAAG;AAChB,MAAA,OAAO,IAAI,CAACY,MAAM,CAACZ,WAAW,CAAA;KAC/B;IACD,IAAIa,OAAOA,GAAG;AACZ,MAAA,OAAO,IAAI,CAACD,MAAM,CAACC,OAAO,CAAA;KAC3B;IACDC,cAAcA,GAAG,EAAC;GACnB,CAAA;AAED,EAAA,OAAOnD,KAAK,CAAA;AACd;;;;"}