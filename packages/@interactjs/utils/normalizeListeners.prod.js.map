{"version":3,"file":"normalizeListeners.prod.js","sources":["normalizeListeners.ts"],"sourcesContent":["import type { EventTypes, Listener, ListenersArg } from '@interactjs/core/types'\n\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize(\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[] | null,\n  filter = (_typeOrPrefix: string) => true,\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    type.forEach((t) => normalize(t, listeners, filter, result))\n    return result\n  }\n\n  // before:  type = [{ drag: () => {} }], listeners = undefined\n  // after:   type = ''                  , listeners = [{ drag: () => {} }]\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners) && filter(type)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, filter, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], filter, result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split(type: string) {\n  return type.trim().split(/ +/)\n}\n"],"names":["filter","normalize","listeners","undefined","arguments","_typeOrPrefix","length","result","is","string","type","search","split","array","t","forEach","object","func","push","l","prefix","map","p"],"mappings":";;yGAQe,IAAAA,EAAkBC,UAE/BC,OAAgD,QAG3BC,IAAAC,UAAA,GAAAA,UAAA,GAAAC,IAAA,EAFrBL,EAAMI,UAAAE,OAAAF,EAAAA,UAAA,QAAAD,EAON,GAPwCI,EACxCA,GAA4BH,CAAAA,EAEtBI,GAAAC,OAASC,KAAM,IAAAA,EAAAC,OAAA,SAERC,UAEbJ,GAAAK,MAAAH,GAGEA,SADKG,SAAMH,GAAOT,UAAAa,EAAAZ,EAAAF,EAAAO,KACbQ,EASP,GAJAP,GAAAQ,OAAAN,OACcA,EACZR,EAAAA,IAEFM,GAAAS,KAAAf,IAAAF,EAAAU,GAEIF,EAAGS,GAAKf,EAAUQ,IAAWA,GAC/BH,EAAOG,GAAKQ,KAAShB,QACrBK,GAAWC,GAACK,MAAMX,GACnB,IAAM,MAAMiB,OACNlB,UAAOS,MAAeH,QAE3B,GAAAC,GAAAQ,OAAAd,GACD,IAAM,MAAMkB,KAAQlB,EAAY,CAE7BD,gBAD4BmB,GAAEC,KAAAC,GAAA,GAAAZ,IAAAY,MACRV,EAAaQ,GAAapB,EAAOO,GAI3D,OAAAA,CAEA,CACF,SAAAK,MAAAF,GAESE,OAAAA,EAAKA,OAAeA,MAAA,aAE7BX"}