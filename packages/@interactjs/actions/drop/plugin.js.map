{"version":3,"file":"plugin.js","sources":["plugin.ts"],"sourcesContent":["import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, PointerEventType, Rect, ListenersArg } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '../drag/plugin'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n/* eslint-enable import/no-duplicates */\n\nimport { DropEvent } from './DropEvent'\n\nexport type DropFunctionChecker = (\n  dragEvent: any, // related drag operation\n  event: any, // touch or mouse EventEmitter\n  dropped: boolean, // default checker result\n  dropzone: Interactable, // dropzone interactable\n  dropElement: Element, // drop zone element\n  draggable: Interactable, // draggable's Interactable\n  draggableElement: Element, // dragged element\n) => boolean\n\nexport interface DropzoneOptions extends PerActionDefaults {\n  accept?:\n    | string\n    | Element\n    | (({ dropzone, draggableElement }: { dropzone: Interactable; draggableElement: Element }) => boolean)\n  // How the overlap is checked on the drop zone\n  overlap?: 'pointer' | 'center' | number\n  checker?: DropFunctionChecker\n\n  ondropactivate?: ListenersArg\n  ondropdeactivate?: ListenersArg\n  ondragenter?: ListenersArg\n  ondragleave?: ListenersArg\n  ondropmove?: ListenersArg\n  ondrop?: ListenersArg\n}\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     *\n     * ```js\n     * interact('.drop').dropzone({\n     *   accept: '.can-drop' || document.getElementById('single-drop'),\n     *   overlap: 'pointer' || 'center' || zeroToOne\n     * }\n     * ```\n     *\n     * Returns or sets whether draggables can be dropped onto this target to\n     * trigger drop events\n     *\n     * Dropzones can receive the following events:\n     *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n     *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n     *  - `dragmove` when a draggable that has entered the dropzone is moved\n     *  - `drop` when a draggable is dropped into this dropzone\n     *\n     * Use the `accept` option to allow only elements that match the given CSS\n     * selector or element. The value can be:\n     *\n     *  - **an Element** - only that element can be dropped into this dropzone.\n     *  - **a string**, - the element being dragged must match it as a CSS selector.\n     *  - **`null`** - accept options is cleared - it accepts any element.\n     *\n     * Use the `overlap` option to set how drops are checked for. The allowed\n     * values are:\n     *\n     *   - `'pointer'`, the pointer must be over the dropzone (default)\n     *   - `'center'`, the draggable element's center must be over the dropzone\n     *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n     *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n     *   over the dropzone\n     *\n     * Use the `checker` option to specify a function to check if a dragged element\n     * is over this Interactable.\n     *\n     * @param options - The new options to be set\n     */\n    dropzone(options: DropzoneOptions | boolean): Interactable\n    /** @returns The current setting */\n    dropzone(): DropzoneOptions\n\n    /**\n     * ```js\n     * interact(target)\n     * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n     *                       event,             // TouchEvent/PointerEvent/MouseEvent\n     *                       dropped,           // bool result of the default checker\n     *                       dropzone,          // dropzone Interactable\n     *                       dropElement,       // dropzone elemnt\n     *                       draggable,         // draggable Interactable\n     *                       draggableElement) {// draggable element\n     *\n     *   return dropped && event.target.hasAttribute('allow-drop')\n     * }\n     * ```\n     */\n    dropCheck(\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ): boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    /** @internal */\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    /**\n     * Returns or sets whether the dimensions of dropzone elements are calculated\n     * on every dragmove or only on dragstart for the default dropChecker\n     *\n     * @param {boolean} [newValue] True to check on each move. False to check only\n     * before start\n     * @return {boolean | interact} The current setting or interact\n     */\n    dynamicDrop: (newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install(scope: Scope) {\n  const { actions, interactStatic: interact, Interactable, defaults } = scope\n\n  scope.usePlugin(drag)\n\n  Interactable.prototype.dropzone = function (this: Interactable, options) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop!\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDropzones({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    for (const dropzoneElement of dropzone.getAllElements()) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents(activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops(scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDropzones(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop(\n  { dropState, interactable: draggable, element: dragElement }: Interaction,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops: Element[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    const isValid = dropzone.dropCheck(\n      dragEvent,\n      pointerEvent,\n      draggable!,\n      dragElement!,\n      dropzoneElement,\n      rect,\n    )\n    validDrops.push(isValid ? dropzoneElement : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState!.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents(interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const dropState = interaction.dropState!\n  const dropEvents: Record<string, DropEvent | null> = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null as never\n    dropEvents.activate.dropzone = null as never\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null as never\n    dropEvents.deactivate.dropzone = null as never\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\n  Record<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents(interaction: Interaction, events: FiredDropEvents) {\n  const dropState = interaction.dropState!\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const dropState = interaction.dropState!\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod(interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      const prevListeners = interactable.options.drop.listeners\n      prevListeners && interactable.off(prevListeners)\n\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod(\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n          dragEvent,\n          event,\n          dropped,\n          interactable,\n          dropElement,\n          draggable,\n          draggableElement,\n        )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n\n      // reset active dropzones\n      dropState.activeDrops = []\n      dropState.events = {}\n      dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n      fireDropEvents(interaction, dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState!.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null as never\n        dropState.events = null as never\n        dropState.cur.dropzone = null as never\n        dropState.cur.element = null as never\n        dropState.prev.dropzone = null as never\n        dropState.prev.element = null as never\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n\n  filterEventType: (type: string) => type.search('drag') === 0 || type.search('drop') === 0,\n\n  defaults: {\n    enabled: false,\n    accept: null as never,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n"],"names":["install","scope","actions","interactStatic","interact","Interactable","defaults","usePlugin","drag","prototype","dropzone","options","dropzoneMethod","dropCheck","dragEvent","event","draggable","draggableElement","dropElement","rect","dropCheckMethod","dynamicDrop","newValue","is","bool","extend","phaselessTypes","dragenter","dragleave","dropactivate","dropdeactivate","dropmove","drop","methodDict","collectDropzones","_ref","interactables","drops","list","enabled","accept","element","string","domUtils","matchesSelector","func","dropzoneElement","getAllElements","push","getRect","fireActivationEvents","activeDrops","slice","target","fire","propagationStopped","immediatePropagationStopped","getActiveDrops","dragElement","activeDrop","getDrop","_ref2","pointerEvent","dropState","interactable","validDrops","isValid","dropIndex","indexOfDeepestElement","getDropEvents","interaction","_pointerEvent","dropEvents","enter","leave","activate","deactivate","move","type","DropEvent","rejected","cur","prev","dragLeave","prevDropzone","dragEnter","relatedTarget","fireDropEvents","events","onEventCreated","_ref3","iEvent","dropResult","object","listeners","normalized","normalizeListeners","corrected","Object","keys","reduce","acc","correctedType","test","prevListeners","off","on","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","overlap","number","Math","max","min","checker","dropped","dropOverlap","origin","getOriginXY","page","pointerUtils","getPageXY","x","y","horizontal","left","right","vertical","top","bottom","dragRect","cx","width","cy","height","overlapArea","overlapRatio","id","_ref4","prepared","name","interactions:after-action-start","_ref5","interactions:after-action-move","_ref6","interactions:action-end","arg","_ref7","filterEventType","search"],"mappings":"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"}