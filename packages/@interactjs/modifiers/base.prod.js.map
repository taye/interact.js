{"version":3,"file":"base.prod.js","sources":["base.ts"],"sourcesContent":["import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\n\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result,\n>(module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const { interaction } = arg\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, interaction.coords.start.page)\n      interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.setAndApply(arg)\n      interaction.edges = modification.edges\n\n      return ret\n    },\n\n    'interactions:before-action-end': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.beforeEnd(arg)\n      interaction.edges = modification.startEdges\n\n      return ret\n    },\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n"],"names":["defaults","start","module","set","beforeEnd","stop","modifier","_options","options","enabled","prop","m","methods","name","enable","disable","_defaults","addEventModifiers","_ref","iEvent","interaction","modification","result","eventProps","modifiersBase","id","before","scope","install","perAction","modifiers","listeners","_ref2","Modification","arg","coords","page","edges","setAndApply","startEdges","restoreInteractionCoords","makeModifier"],"mappings":";;yKA4BO,MAAAA,SAMCA,GAAEA,IAAmB,CAC3BC,QAAgBA,MACdA,IAAKC,EAAQC,IACbA,UAAWD,EAAIE,UACfA,KAASF,EAAQG,MAElBC,EAAAC,IAEKD,MAAAA,EAAYC,GAAiC,CAAA,EACjDC,EAAaC,SAA+B,IAAnBD,EAAAC,QAIzB,IAAA,MAAAC,KAAAV,EACKU,KAAUF,MACHE,GAAIF,EAAUE,IAG1B,MAAAC,EAAA,CAEAH,UACEA,UACAI,OACAC,MAGE,GADAL,OADFM,EAAcL,SAAA,EACLE,CAACF,EAET,OAGC,GADAD,OADFO,EAAeN,SAAA,EACNE,CAACF,UAGXE,CAAA,EASH,OANCE,GAAA,iBAAAA,IAGCP,EAAAU,UAAAhB,EACAM,EAASU,SAASJ,GAEpBN,CAEA,CACF,SAAAW,kBAAAC,GAEgBD,IAAAA,OAAkBE,EAAAC,YAChCD,GACAC,EAID,QAAAA,EAAAC,aAAAC,OACCA,IAEAH,YAAYG,EAAAC,WAEZ,CACF,MAAAC,cAAA,CAEAC,GAAMD,iBACJC,OAAoB,CAAA,WACpBC,OAEEC,CAFOA,GACTC,EAAUD,SAAUE,UAAAC,UAAA,EAAA,EAEnBC,UAAA,mBAGGX,CAFOY,GACT,IAAAZ,YAAqBA,GAAEA,EAAaA,EAAAC,aAAA,IAAAY,aAAAb,EAAA,EAEnC,kCAQCC,CARDa,GAED,MAAAd,YACQA,GAAEA,IAAmBc,EAAAd,YAAAC,aAC3BA,QAAqBa,EAAGd,EAAYe,aAAcC,MAElDf,EAAYgB,QAAYjB,MACxBA,EAAYiB,mBAAoBH,IAEjC,iCAQC,CARDA,GAED,MAAAd,YACQA,GAAEA,gBACFC,GAAEA,MAA4BiB,YAAAJ,GAEpCd,OADAA,EAAYC,MAAAA,EAAwBgB,SAIrC,gCAQC,CARDH,GAED,MAAAd,YACQA,GAAEA,gBACFC,GAAEA,MAA4BjB,UAAA8B,GAEpCd,OADAA,EAAYC,MAAAA,EAAsBkB,cAInC,4BAAAtB,kBAED,6CACA,4CACA,iCAA4C,CAAAiB,GAAAA,SAAAd,YAAAC,aAAAmB,yBAAAN,EAAA,EAE5C,iCAAiCA,GAAMA,SAAQd,YAAYC,aAAamB,yBAAyBN,EAAI,EACrG,mBAAuE,CAAvCA,GAAAA,SAAAd,YAAcC,aAAaA,KAAYa,aAI3EjB,kBAAAO,yBAAAiB"}