{"version":3,"file":"interactions.js","sources":["interactions.ts"],"sourcesContent":["import browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Listener } from '@interactjs/core/types'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './interactablePreventDefault'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport InteractionBase from './Interaction'\n/* eslint-enable import/no-duplicates */\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string; listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install(scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class<T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance() {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance(value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now() {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName>(options: { pointerType?: string; scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls() {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions(method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction(searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'>(\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n"],"names":["methodNames","install","scope","listeners","method","doOnInteractions","pEventTypes","browser","docEvents","domObjects","PointerEvent","type","down","listener","releasePointersOnRemovedEls","pointerDown","move","pointerMove","up","pointerUp","cancel","push","event","interaction","interactions","list","documentBlur","prevTouchTime","Interaction","InteractionBase","pointerMoveTolerance","value","_now","now","new","options","scopeFire","name","arg","fire","pointerIsDown","pointerType","_interacting","pointer","pointers","documents","some","_ref","doc","nodeContains","downTarget","removePointer","usePlugin","interactablePreventDefault","pointerUtils","getPointerType","eventTarget","curEventTarget","getEventTargets","matches","test","changedTouch","changedTouches","pointerId","getPointerId","searchDetails","eventType","getInteraction","invalidPointer","supportsPointerEvent","i","length","timeStamp","foundInteraction","finder","search","signalArg","onDocSignal","_ref2","eventMethodName","events","eventMethod","isIOS","passive","delegatedEvents","delegateListener","delegateUseCapture","eventOptions","id","interactable:unset","_ref3","interactable","stop","destroy","splice"],"mappings":"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"}