{"version":3,"file":"plugin.js","sources":["plugin.ts"],"sourcesContent":["import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionName,\n  ActionProps,\n  EdgeOptions,\n  FullRect,\n  ListenersArg,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable(): ResizableOptions\n    resizable(options: Partial<OrBoolean<ResizableOptions>> | boolean): this\n    /**\n     * ```js\n     * interact(element).resizable({\n     *   onstart: function (event) {},\n     *   onmove : function (event) {},\n     *   onend  : function (event) {},\n     *\n     *   edges: {\n     *     top   : true,       // Use pointer coords to check for resize.\n     *     left  : false,      // Disable resizing from left edge.\n     *     bottom: '.resize-s',// Resize if pointer target matches selector\n     *     right : handleEl    // Resize if pointer target is the given Element\n     *   },\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height are adjusted at a 1:1 ratio.\n     *   square: false,\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height maintain the aspect ratio they had when resizing started.\n     *   preserveAspectRatio: false,\n     *\n     *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n     *   // 'negate' will allow the rect to have negative width/height\n     *   // 'reposition' will keep the width/height positive by swapping\n     *   // the top and bottom edges and/or swapping the left and right edges\n     *   invert: 'none' || 'negate' || 'reposition'\n     *\n     *   // limit multiple resizes.\n     *   // See the explanation in the {@link Interactable.draggable} example\n     *   max: Infinity,\n     *   maxPerElement: 1,\n     * })\n     *\n     * var isResizeable = interact(element).resizable()\n     * ```\n     *\n     * Gets or sets whether resize actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on resize events (object makes the Interactable\n     * resizable)\n     * @returns A boolean indicating if this can be the\n     * target of resize elements, or this Interactable\n     */\n    resizable(options?: Partial<OrBoolean<ResizableOptions>> | boolean): this | ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction<T extends ActionName | null = ActionName> {\n    resizeAxes: 'x' | 'y' | 'xy'\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizableOptions extends PerActionDefaults {\n  square?: boolean\n  preserveAspectRatio?: boolean\n  edges?: EdgeOptions | null\n  axis?: 'x' | 'y' | 'xy' // deprecated\n  invert?: 'none' | 'negate' | 'reposition'\n  margin?: number\n  squareResize?: boolean\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install(scope: Scope) {\n  const {\n    actions,\n    browser,\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as Interactable['resizable']\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker(arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable(interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge(\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      const edge = width >= 0 ? rect.left : rect.right\n      return page.x < edge + margin\n    }\n    if (name === 'top') {\n      const edge = height >= 0 ? rect.top : rect.bottom\n      return page.y < edge + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n      value === element\n    : // otherwise check if element matches value as selector\n      dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors(browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n        x: 'e-resize',\n        y: 's-resize',\n        xy: 'se-resize',\n\n        top: 'n-resize',\n        left: 'w-resize',\n        bottom: 's-resize',\n        right: 'e-resize',\n        topleft: 'se-resize',\n        bottomright: 'se-resize',\n        topright: 'ne-resize',\n        bottomleft: 'ne-resize',\n      }\n    : {\n        x: 'ew-resize',\n        y: 'ns-resize',\n        xy: 'nwse-resize',\n\n        top: 'ns-resize',\n        left: 'ew-resize',\n        bottom: 'ns-resize',\n        right: 'ew-resize',\n        topleft: 'nwse-resize',\n        bottomright: 'nwse-resize',\n        topright: 'nesw-resize',\n        bottomleft: 'nesw-resize',\n      }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  filterEventType: (type: string) => type.search('resize') === 0,\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n"],"names":["install","scope","actions","browser","Interactable","defaults","resize","cursors","initCursors","defaultMargin","supportsTouch","supportsPointerEvent","prototype","resizable","options","map","methodDict","resizeChecker","arg","interaction","interactable","element","rect","buttons","undefined","page","extend","coords","cur","resizeOptions","enabled","pointerIsDown","test","pointerType","mouseButtons","is","object","edges","resizeEdges","left","right","top","bottom","edge","checkResizeEdge","_latestPointer","eventTarget","margin","action","name","axis","x","y","axes","setPerAction","setOnEvents","string","bool","preserveAspectRatio","square","value","interactableElement","width","number","height","Math","min","abs","dom","matchesUpTo","isIe9","xy","topleft","bottomright","topright","bottomleft","start","_ref","iEvent","prepared","resizeEvent","_rects","corrected","previous","delta","deltaRect","move","_ref2","invert","invertible","current","startRect","swap","max","end","_ref3","updateEventAxes","_ref4","resizeAxes","id","before","listeners","_ref5","NaN","getCursor","_ref6","result","cursorKey","filterEventType","type","search"],"mappings":"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"}