{"version":3,"file":"options.js","sources":["options.ts"],"sourcesContent":["import type { Point, Listeners, OrBoolean, Element, Rect } from '@interactjs/core/types'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'always' | 'never' | 'auto'\n  deltaSource?: 'page' | 'client'\n  context?: Node\n  getRect?: (element: Element) => Rect\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\n  Partial<PerActionDefaults> & {\n    [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n  }\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n"],"names":["defaults","base","preventDefault","deltaSource","perAction","enabled","origin","x","y","actions"],"mappings":";;;;;;;;AAQA;;AAyBO,MAAMA,QAAkB,GAAG;AAChCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,cAAc,EAAE,MAAM;AACtBC,IAAAA,WAAW,EAAE,MAAA;GACd;AAEDC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,KAAK;AACdC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAC;AAAEC,MAAAA,CAAC,EAAE,CAAA;AAAE,KAAA;GACtB;AAEDC,EAAAA,OAAO,EAAE,EAAC;AACZ;;;;"}