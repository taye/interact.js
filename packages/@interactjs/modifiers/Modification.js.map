{"version":3,"file":"Modification.js","sources":["Modification.ts"],"sourcesContent":["import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/core/types'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './types'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  startEdges!: EdgeOptions\n  edges: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n    this.edges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n  }\n\n  start({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.startEdges = extend({}, interaction.edges)\n    this.edges = extend({}, this.startEdges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg(arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect ||= interaction.rect\n    arg.edges ||= this.startEdges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll(arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll(arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect, edges: unmodifiedEdges } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n    arg.edges = extend({}, unmodifiedEdges)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(arg.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    extend(this.edges, arg.edges)\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction(arg: { phase: EventPhase; rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply(\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd(arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop(arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates(modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo(options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom(other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.startEdges = other.startEdges\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy() {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult(coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList(interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset(rect, coords) {\n  return rect\n    ? {\n        left: coords.x - rect.left,\n        top: coords.y - rect.top,\n        right: rect.right - coords.x,\n        bottom: rect.bottom - coords.y,\n      }\n    : {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      }\n}\n"],"names":["Modification","states","startOffset","left","right","top","bottom","startDelta","result","endResult","startEdges","edges","interaction","constructor","createResult","start","_ref","pageCoords","phase","modifierList","getModifierList","prepareStates","extend","getRectOffset","rect","x","y","arg","fillArg","preEnd","startAll","setAll","interactable","element","state","methods","skipModifiers","unmodifiedRect","unmodifiedEdges","coords","slice","newResult","_state$methods","options","lastModifierCoords","returnValue","set","shouldDo","rectUtils","addEdges","eventProps","push","delta","rectDelta","prevCoords","prevRect","rectChanged","changed","applyToInteraction","curCoords","cur","startCoords","curDelta","coordsSet","page","client","width","height","setAndApply","modifiedCoords","length","interacting","adjustment","beforeEnd","event","doPreend","endPosition","move","stop","modifierArg","index","name","restoreInteractionCoords","_ref2","modification","coordsAndDeltas","requireEndOnly","enabled","endOnly","setStart","copyFrom","other","map","s","clone","destroy","prop","actionOptions","prepared","actionModifiers","modifiers","type","_methods","filter","m"],"mappings":"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"}