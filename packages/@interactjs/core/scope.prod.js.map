{"version":3,"file":"scope.prod.js","sources":["scope.ts"],"sourcesContent":["import browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport type Interaction from '@interactjs/core/Interaction'\n\nimport { Eventable } from './Eventable'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './events'\nimport './interactions'\nimport events from './events'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport { InteractEvent } from './InteractEvent'\nimport interactions from './interactions'\n/* eslint-enable import/no-duplicates */\nimport { createInteractStatic } from './InteractStatic'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\nimport type { Actions } from './types'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase; options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\n/** @internal */\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id?: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {} as any,\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document; options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor() {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults() {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase>(this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset(this: InteractableBase) {\n        super.unset()\n\n        const index = scope.interactables.list.indexOf(this)\n        if (index < 0) return\n\n        scope.interactables.list.splice(index, 1)\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners(map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName>(name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init(window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled(plugin: Plugin) {\n    const { id } = plugin\n    return id ? !!this._plugins.map[id] : this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin(plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (otherId && (before[otherId] || before[pluginIdRoot(otherId)])) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument(doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument(doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex(doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions(doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now() {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\n// Keep Scope class internal, but expose minimal interface to avoid broken types when Scope is stripped out\nexport interface Scope {\n  fire<T extends ListenerName>(name: T, arg: SignalArgs[T]): void | false\n}\n\n/** @internal */\nexport function initScope(scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot(id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n"],"names":["Scope","id","isInitialized","Math","floor","random","listenerMaps","browser","defaults","Eventable","map","actions","start","move","end","phaselessTypes","InteractEvent","this","_win","document","documents","list","event","removeDocument","target","scope","Interactable","set","_defaults","super","fire","options","interactable","unset","index","interactables","indexOf","splice","addListeners","push","name","listener","init","window","initScope","onWindowUnload","plugin","pluginIsInstalled","_plugins","usePlugin","install","before","len","length","reduce","acc","listeners","otherId","pluginIdRoot","addDocument","doc","win","getWindow","extend","events","i","getDocOptions","docIndex","getDocIndex","Date","raf","interactions"],"mappings":"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"}