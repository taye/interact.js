{"version":3,"file":"plugin.js","sources":["plugin.ts"],"sourcesContent":["import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent, EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Rect, PointerType, ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number // angle from first to second touch\n      distance: number\n      scale: number // gesture.distance / gesture.startDistance\n      startAngle: number // angle of line joining two touches\n      startDistance: number // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable(options: Partial<OrBoolean<GesturableOptions>> | boolean): this\n    gesturable(): GesturableOptions\n    /**\n     * ```js\n     * interact(element).gesturable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // limit multiple gestures.\n     *     // See the explanation in {@link Interactable.draggable} example\n     *     max: Infinity,\n     *     maxPerElement: 1,\n     * })\n     *\n     * var isGestureable = interact(element).gesturable()\n     * ```\n     *\n     * Gets or sets whether multitouch gestures can be performed on the target\n     *\n     * @param options - true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n     * @returns A boolean indicating if this can be the target of gesture events, or this Interactable\n     */\n    gesturable(options?: Partial<OrBoolean<GesturableOptions>> | boolean): this | GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    gesture: GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GesturableOptions extends PerActionDefaults {\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface GestureEvent extends InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Rect // enclosing box of all points\n  touches: PointerType[]\n}\n\nexport interface GestureSignalArg extends DoPhaseArg<'gesture', EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interaction<'gesture'>\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.gesturable = function (\n    this: InstanceType<typeof Interactable>,\n    options: GesturableOptions | boolean,\n  ) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as GesturableOptions\n  } as Interactable['gesturable']\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') return\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = 1\n    iEvent.ds = 0\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  } else if (ending || interaction.pointers.length < 2) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box = prevEvent.box\n    iEvent.scale = prevEvent.scale\n    iEvent.ds = 0\n    iEvent.angle = prevEvent.angle\n    iEvent.da = 0\n  } else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) && iEvent.scale !== Infinity && !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': (arg) => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {},\n\n  getCursor() {\n    return ''\n  },\n\n  filterEventType: (type: string) => type.search('gesture') === 0,\n}\n\nexport default gesture\n"],"names":["install","scope","actions","Interactable","defaults","prototype","gesturable","options","is","object","gesture","enabled","setPerAction","setOnEvents","bool","map","methodDict","updateGestureProps","_ref","interaction","iEvent","phase","prepared","name","pointers","p","pointer","starting","ending","deltaSource","interactable","touches","distance","pointerUtils","touchDistance","box","touchBBox","scale","ds","angle","touchAngle","da","startDistance","startAngle","length","prevEvent","number","Infinity","isNaN","id","before","listeners","_ref2","arg","undefined","gestureOptions","action","getCursor","filterEventType","type","search"],"mappings":"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"}