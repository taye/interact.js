{"version":3,"file":"plugin.js","sources":["plugin.ts"],"sourcesContent":["import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable(options: Partial<OrBoolean<DraggableOptions>> | boolean): this\n    draggable(): DraggableOptions\n    /**\n     * ```js\n     * interact(element).draggable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // the axis in which the first movement must be\n     *     // for the drag sequence to start\n     *     // 'xy' by default - any direction\n     *     startAxis: 'x' || 'y' || 'xy',\n     *\n     *     // 'xy' by default - don't restrict to one axis (move in any direction)\n     *     // 'x' or 'y' to restrict movement to either axis\n     *     // 'start' to restrict movement to the axis the drag started in\n     *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n     *\n     *     // max number of drags that can happen concurrently\n     *     // with elements of this Interactable. Infinity by default\n     *     max: Infinity,\n     *\n     *     // max number of drags that can target the same element+Interactable\n     *     // 1 by default\n     *     maxPerElement: 2\n     * })\n     *\n     * var isDraggable = interact('element').draggable(); // true\n     * ```\n     *\n     * Get or set whether drag actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on drag events (object makes the Interactable\n     * draggable)\n     */\n    draggable(options?: Partial<OrBoolean<DraggableOptions>> | boolean): this | DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport interface DraggableOptions extends PerActionDefaults {\n  startAxis?: 'x' | 'y' | 'xy'\n  lockAxis?: 'x' | 'y' | 'xy' | 'start'\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\nconst draggable: Interactable['draggable'] = function draggable(\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag as DraggableOptions\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DraggableOptions,\n\n  getCursor() {\n    return 'move'\n  },\n\n  filterEventType: (type: string) => type.search('drag') === 0,\n}\n\nexport default drag\n"],"names":["install","scope","actions","Interactable","defaults","prototype","draggable","drag","map","methodDict","beforeMove","_ref","interaction","prepared","name","axis","coords","cur","page","y","start","client","velocity","x","move","_ref2","iEvent","opposite","delta","options","is","object","enabled","setPerAction","setOnEvents","test","lockAxis","startAxis","bool","id","listeners","arg","interactable","buttons","dragOptions","pointerIsDown","pointerType","mouseButtons","undefined","action","getCursor","filterEventType","type","search"],"mappings":"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"}