{"version":3,"file":"clone.prod.js","sources":["clone.ts"],"sourcesContent":["import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object>(source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    } else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    } else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n"],"names":["clone","source","dest","prop","value","is","plainObject","array","arr"],"mappings":";;iHAIe,SAASA,MAAwBC,GAC9C,MAAMC,EAAO,CAAA,EAEb,IAAK,MAAMC,KAAQF,EAAQ,CACzB,MAAMG,EAAQH,EAAOE,GAEjBE,GAAGC,YAAYF,GACjBF,EAAKC,GAAQH,MAAMI,GACVC,GAAGE,MAAMH,GAClBF,EAAKC,GAAQK,KAASJ,GAEtBF,EAAKC,GAAQC,CAEjB,CAEA,OAAOF,CACT"}