{"version":3,"file":"window.prod.js","sources":["window.ts"],"sourcesContent":["import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init(window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow(node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = node.ownerDocument || node\n\n  return rootNode.defaultView || win.window\n}\n"],"names":["realWindow","win","window","el","document","createTextNode","ownerDocument","wrap","getWindow","node","isWindow","init"],"mappings":";;wDAEWA,IAEPC,cAAyBC,gBAQ3B,MAAAC,EAAAD,EAAAE,SAAAC,eAAA,IAGAF,EAAAG,gBAAAJ,EAAAE,UAAA,mBAAAF,EAAAK,MAAAL,EAAAK,KAAAJ,KAAAA,IAEED,EAAAA,EAAAK,KAAAL,IAEFD,IAAAC,CAEAD,CAKF,SAAAO,UAAAC,GAEgBD,GAAAA,SAAAA,GACVE,OAAAA,EAIJ,OAFAD,EAAAH,eAAAG,GAEiBA,aAAkBR,IAAAC,MAEnC,CAbF,oBAAAA,QAAAA,QAEIS,KAAAT,eAYJM,UAAAG,KAAAX,WAAAC"}