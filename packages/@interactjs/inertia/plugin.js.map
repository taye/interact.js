{"version":3,"file":"plugin.js","sources":["plugin.ts"],"sourcesContent":["import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Point, PointerEventType } from '@interactjs/core/types'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/modifiers/base'\nimport '@interactjs/offset/plugin'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport { Modification } from '@interactjs/modifiers/Modification'\nimport type { ModifierArg } from '@interactjs/modifiers/types'\nimport offset from '@interactjs/offset/plugin'\n/* eslint-enable import/no-duplicates */\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start(event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia() {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd() {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame(tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick() {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick() {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end() {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop() {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume(arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue(t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint(\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad(t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n"],"names":["install","scope","defaults","usePlugin","offset","modifiers","default","actions","phases","inertiastart","resume","perAction","inertia","enabled","resistance","minSpeed","endSpeed","allowResume","smoothEndDuration","InertiaState","active","isModified","smoothEnd","modification","modifierCount","modifierArg","startCoords","t0","v0","te","targetOffset","modifiedOffset","currentOffset","lambda_v0","one_ve_v0","timeout","interaction","constructor","start","event","options","getOptions","client","velocityClient","coords","velocity","pointerSpeed","hypot","x","y","Modification","copyFrom","_now","cur","page","fillArg","pageCoords","preEnd","phase","thrown","timeStamp","startInertia","result","setAll","changed","startSmoothEnd","rect","offsetBy","_doPhase","simulation","startVelocity","lambda","inertiaDur","Math","log","delta","onNextFrame","inertiaTick","smoothEndTick","tickFn","raf","request","t","progress","exp","newOffset","getQuadraticCurvePoint","move","end","duration","easeOutQuad","skipModifiers","_ref","pointer","eventTarget","updatePointer","copyCoords","prev","stop","cancel","_ref2","_interacting","started","arg","state","element","is","dom","parentNode","_ref3","_ref4","interactable","prepared","name","id","before","listeners","_ref5","applyToInteraction","setAndApply","addEventModifiers","restoreInteractionCoords","_getQBezierValue","p1","p2","p3","iT","startX","startY","cpX","cpY","endX","endY","position","b","c","d"],"mappings":"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"}