{"version":3,"file":"base-45YfudGV.js","sources":["base.ts"],"sourcesContent":["import type { Eventable } from '@interactjs/core/Eventable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Point, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    pointerEvents: Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<null>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<any>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 },\n}\n\nconst pointerEvents: Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string>(\n  arg: {\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Scope,\n) {\n  const { interaction, pointer, event, eventTarget, type, targets = collectEventTargets(arg, scope) } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      ;(pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (\n      pointerEvent.immediatePropagationStopped ||\n      (pointerEvent.propagationStopped &&\n        i + 1 < targets.length &&\n        targets[i + 1].node !== pointerEvent.currentTarget)\n    ) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire(\n          {\n            interaction,\n            pointer,\n            event,\n            eventTarget,\n            type: 'doubletap',\n          },\n          scope,\n        )\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string>(\n  {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n  }: {\n    interaction: Interaction<any>\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    type: T\n  },\n  scope: Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (\n    type === 'tap' &&\n    (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))\n  ) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(\n      (target) =>\n        target.eventable.options.holdDuration === interaction.pointers[pointerIndex]?.hold?.duration,\n    )\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps({ interaction }) {\n  interaction.prevTap = null // the most recent tap event on this interaction\n  interaction.tapTime = 0 // time of the most recent tap event\n}\n\nfunction addHoldInfo({ down, pointerInfo }: SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire(\n      {\n        interaction,\n        pointer,\n        event,\n        eventTarget: eventTarget as Element,\n        type: 'move',\n      },\n      scope,\n    )\n  }\n}\n\nfunction downAndStartHold(\n  { interaction, pointer, event, eventTarget, pointerIndex }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  const timer = interaction.pointers[pointerIndex].hold!\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) return\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire(\n      {\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      },\n      scope,\n    )\n  }, minDuration)\n}\n\nfunction tapAfterUp(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:up'],\n  scope: Scope,\n) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install(scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n"],"names":["defaults","holdDuration","ignoreFrom","allowFrom","origin","x","y","pointerEvents","id","before","install","listeners","addInteractionProps","addHoldInfo","moveAndClearHold","interactions:down","arg","scope","downAndStartHold","fire","interactions:up","clearHold","tapAfterUp","interactions:cancel","PointerEvent","collectEventTargets","types","down","move","up","cancel","tap","doubletap","hold","interaction","pointer","event","eventTarget","type","targets","pointerEvent","now","signalArg","i","length","target","prop","props","getOriginXY","eventable","node","_subtractOrigin","currentTarget","_addOrigin","immediatePropagationStopped","propagationStopped","prevTap","double","tapTime","timeStamp","_ref","pointerIndex","getPointerIndex","pointerInfo","pointers","pointerWasMoved","downTarget","path","domUtils","getPath","filter","_interaction$pointers","_interaction$pointers2","options","duration","_ref2","_ref3","Infinity","timeout","_ref4","clearTimeout","duplicate","pointerIsDown","_ref5","timer","minDuration","setTimeout","_ref6","actions","extend","phaselessTypes"],"mappings":"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"}