{"version":3,"file":"Eventable.prod.js","sources":["Eventable.ts"],"sourcesContent":["import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nimport type { Listener, ListenersArg, Rect } from '@interactjs/core/types'\n\nfunction fireUntilImmediateStopped(event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor(options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string; propagationStopped?: boolean }>(event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect(_element: Element): Rect {\n    return null\n  }\n}\n"],"names":["fireUntilImmediateStopped","event","immediatePropagationStopped","listener","Eventable","constructor","options","types","propagationStopped","global","fire","this","listeners","type","on","normalize","merge","off","eventList","subListener","index","splice","getRect","_element"],"mappings":";;wLAOA,IAAA,MAAkCA,KAAAA,EAAW,CACtC,GAAAC,EAAcC,4BACbD,MAEJE,EAAAF,GAGF,CACF,MAAAG,UAEO,WAAAC,SACEC,aAAA,EACPC,KAA6BA,MAAE,CAAA,EAC/BC,KAAAA,oBAA0B,EAC1BN,KAAAA,6BAAmC,OAC7BO,YAAA,EAENJ,KAAAA,QAAYC,OAAoC,CAAA,EAAAA,GAAA,CAAA,EAC9C,CACF,IAAAI,CAAAT,GAEAS,IAA+DT,EAC7D,QAAyBU,KAAAF,QAIzBG,EAAAD,KAAAJ,MAAAN,EAAAY,QACAb,0BAAiCC,EAAKW,IAItCX,EAAAO,oBAAAC,IAAAG,EAAAH,EAAAR,EAAAY,kCACWL,EAA4BI,EAEvC,CACF,EAAAE,CAAAD,EAAAV,GAEEW,MAAaF,EAA0BG,UAAAF,EAAAV,GACvC,IAAAU,OAEKA,KAAAA,MAAQD,GAAAA,IAAWI,MAAAL,KAAAJ,MAAAM,IAAA,GAAAD,EAAAC,GAExB,CACF,GAAAI,CAAAJ,EAAAV,GAEGc,MAAaL,EAA0BG,UAAAF,EAAAV,GACxC,IAAAU,OAAkBE,CAEbF,MAAAA,EAAQD,KAAWL,MAAAM,GACtB,GAAAK,GAAkBA,EAAWL,OAI7B,IAAA,MAAAM,KAAAP,EAAAC,GAAA,CAEA,QAAsBK,EAAIN,YACVM,IAAdE,GAEIA,EAAUC,OAAID,EAAA,EAElB,CACF,CACF,CACF,OAAAE,CAAAC,GAEAD,OAAQC,IACN,SAEJnB"}