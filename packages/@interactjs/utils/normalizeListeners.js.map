{"version":3,"file":"normalizeListeners.js","sources":["normalizeListeners.ts"],"sourcesContent":["import type { EventTypes, Listener, ListenersArg } from '@interactjs/core/types'\n\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize(\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[] | null,\n  filter = (_typeOrPrefix: string) => true,\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    type.forEach((t) => normalize(t, listeners, filter, result))\n    return result\n  }\n\n  // before:  type = [{ drag: () => {} }], listeners = undefined\n  // after:   type = ''                  , listeners = [{ drag: () => {} }]\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners) && filter(type)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, filter, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], filter, result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split(type: string) {\n  return type.trim().split(/ +/)\n}\n"],"names":["normalize","type","listeners","filter","arguments","length","undefined","_typeOrPrefix","result","is","string","search","split","array","forEach","t","object","func","push","l","prefix","combinedTypes","map","p","trim"],"mappings":";;;;;;;;;;;;AAQe,SAASA,SAASA,CAC/BC,IAAgB,EAChBC,SAAgD,EAG3B;AAAA,EAAA,IAFrBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,GAAAD,CAAAA,IAAAA,SAAA,CAAAE,CAAAA,CAAAA,KAAAA,SAAA,GAAAF,SAAA,CAAIG,CAAAA,CAAAA,GAAAA,aAAqB,IAAK,IAAI,CAAA;EAAA,IACxCC,MAA4B,GAAAJ,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAAE,SAAA,CAAA;AAE5BE,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAE,CAAA;AAErB,EAAA,IAAIC,EAAE,CAACC,MAAM,CAACT,IAAI,CAAC,IAAIA,IAAI,CAACU,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAC9CV,IAAAA,IAAI,GAAGW,KAAK,CAACX,IAAI,CAAC,CAAA;AACpB,GAAA;AAEA,EAAA,IAAIQ,EAAE,CAACI,KAAK,CAACZ,IAAI,CAAC,EAAE;AAClBA,IAAAA,IAAI,CAACa,OAAO,CAAEC,CAAC,IAAKf,SAAS,CAACe,CAAC,EAAEb,SAAS,EAAEC,MAAM,EAAEK,MAAM,CAAC,CAAC,CAAA;AAC5D,IAAA,OAAOA,MAAM,CAAA;AACf,GAAA;;AAEA;AACA;AACA,EAAA,IAAIC,EAAE,CAACO,MAAM,CAACf,IAAI,CAAC,EAAE;AACnBC,IAAAA,SAAS,GAAGD,IAAI,CAAA;AAChBA,IAAAA,IAAI,GAAG,EAAE,CAAA;AACX,GAAA;EAEA,IAAIQ,EAAE,CAACQ,IAAI,CAACf,SAAS,CAAC,IAAIC,MAAM,CAACF,IAAI,CAAC,EAAE;IACtCO,MAAM,CAACP,IAAI,CAAC,GAAGO,MAAM,CAACP,IAAI,CAAC,IAAI,EAAE,CAAA;AACjCO,IAAAA,MAAM,CAACP,IAAI,CAAC,CAACiB,IAAI,CAAChB,SAAS,CAAC,CAAA;GAC7B,MAAM,IAAIO,EAAE,CAACI,KAAK,CAACX,SAAS,CAAC,EAAE;AAC9B,IAAA,KAAK,MAAMiB,CAAC,IAAIjB,SAAS,EAAE;MACzBF,SAAS,CAACC,IAAI,EAAEkB,CAAC,EAAEhB,MAAM,EAAEK,MAAM,CAAC,CAAA;AACpC,KAAA;GACD,MAAM,IAAIC,EAAE,CAACO,MAAM,CAACd,SAAS,CAAC,EAAE;AAC/B,IAAA,KAAK,MAAMkB,MAAM,IAAIlB,SAAS,EAAE;AAC9B,MAAA,MAAMmB,aAAa,GAAGT,KAAK,CAACQ,MAAM,CAAC,CAACE,GAAG,CAAEC,CAAC,IAAM,CAAEtB,EAAAA,IAAK,CAAEsB,EAAAA,CAAE,EAAC,CAAC,CAAA;MAE7DvB,SAAS,CAACqB,aAAa,EAAEnB,SAAS,CAACkB,MAAM,CAAC,EAAEjB,MAAM,EAAEK,MAAM,CAAC,CAAA;AAC7D,KAAA;AACF,GAAA;AAEA,EAAA,OAAOA,MAAM,CAAA;AACf,CAAA;AAEA,SAASI,KAAKA,CAACX,IAAY,EAAE;EAC3B,OAAOA,IAAI,CAACuB,IAAI,EAAE,CAACZ,KAAK,CAAC,IAAI,CAAC,CAAA;AAChC;;;;"}