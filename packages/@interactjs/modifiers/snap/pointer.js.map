{"version":3,"file":"pointer.js","sources":["pointer.ts"],"sourcesContent":["import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName, Point, RectResolvable, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets?: SnapTarget[]\n  // target range\n  range?: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints?: Point[]\n  // startCoords = offset snapping from drag start page position\n  offset?: Point | RectResolvable<[Interaction]> | 'startCoords'\n  offsetWithOrigin?: boolean\n  origin?: RectResolvable<[Element]> | Point\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\n  SnapOptions,\n  {\n    offsets?: Offset[]\n    closest?: any\n    targetFields?: string[][]\n  }\n>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n          index,\n          relativePoint,\n          x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n          y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n        }))\n      : [\n          {\n            index: 0,\n            relativePoint: null,\n            x: snapOffset.x,\n            y: snapOffset.y,\n          },\n        ]\n}\n\nfunction set(arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable!, interaction.element!, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets: SnapPosition[] = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets!) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets!.length; index < len; index++) {\n      const snapTarget = options.targets![index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n          closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n            distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n            (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n          !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin(arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n"],"names":["start","arg","interaction","interactable","element","rect","state","startOffset","options","origin","offsetWithOrigin","getOrigin","x","y","snapOffset","offset","coords","page","offsetRect","resolveRectLike","rectToXY","relativePoints","offsets","length","map","relativePoint","index","left","width","top","height","set","getOriginXY","prepared","name","extend","targets","relativeX","relativeY","len","snapTarget","target","is","func","_proxy","push","number","range","source","closest","inRange","distance","delta","dx","dy","hypot","Infinity","optionsOrigin","defaults","endOnly","enabled","snap","makeModifier"],"mappings":"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"}