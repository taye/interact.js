{"version":3,"file":"size.js","sources":["size.ts"],"sourcesContent":["import type { Point, Rect, Size } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start(arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\n  ModifierState<\n    RestrictSizeOptions & { inner: Rect; outer: Rect },\n    {\n      min: Rect\n      max: Rect\n    }\n  >\n\nfunction set(arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n"],"names":["noMin","width","Infinity","height","noMax","start","arg","restrictEdges","set","interaction","state","rect","edges","options","minSize","rectUtils","tlbrToXywh","getRestrictionRect","min","coords","maxSize","max","endOnly","inner","extend","noInner","outer","noOuter","top","bottom","left","right","defaults","enabled","restrictSize","makeModifier"],"mappings":"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"}