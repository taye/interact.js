{"version":3,"file":"plugin.js","sources":["plugin.ts"],"sourcesContent":["import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, PointerType } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement | string\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install(scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction<ActionName> | null,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start(interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop() {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll() {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check(interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName>({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer(value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName>(\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n"],"names":["install","scope","defaults","actions","autoScroll","now","phaselessTypes","autoscroll","perAction","enabled","margin","container","speed","Date","interaction","i","x","y","isScrolling","prevTime","start","raf","cancel","request","scroll","stop","interactable","element","actionName","prepared","name","options","getContainer","dt","s","scrollBy","prevScroll","getScroll","is","window","scrollLeft","scrollTop","curScroll","delta","fire","type","target","check","_options$actionName$a","onInteractionMove","_ref","pointer","interacting","simulation","top","right","bottom","left","clientX","clientY","innerWidth","innerHeight","rect","domUtils","getElementClientRect","value","string","getStringOptionResult","getWindow","document","body","getScrollSize","scrollWidth","scrollHeight","getScrollSizeDelta","_ref2","func","scrollOptions","scrollContainer","prevSize","curSize","autoScrollPlugin","id","listeners","_ref3","_ref4","arg"],"mappings":";;;;;;;;;;;;;;AAqCA,SAASA,OAAOA,CAACC,KAAY,EAAE;EAC7B,MAAM;IAAEC,QAAQ;AAAEC,IAAAA,OAAAA;AAAQ,GAAC,GAAGF,KAAK,CAAA;EAEnCA,KAAK,CAACG,UAAU,GAAGA,UAAU,CAAA;EAC7BA,UAAU,CAACC,GAAG,GAAG,MAAMJ,KAAK,CAACI,GAAG,EAAE,CAAA;AAElCF,EAAAA,OAAO,CAACG,cAAc,CAACC,UAAU,GAAG,IAAI,CAAA;AACxCL,EAAAA,QAAQ,CAACM,SAAS,CAACJ,UAAU,GAAGA,UAAU,CAACF,QAAQ,CAAA;AACrD,CAAA;AAEA,MAAME,UAAU,GAAG;AACjBF,EAAAA,QAAQ,EAAE;AACRO,IAAAA,OAAO,EAAE,KAAK;AACdC,IAAAA,MAAM,EAAE,EAAE;AAEV;AACAC,IAAAA,SAAS,EAAE,IAAsC;AAEjD;AACAC,IAAAA,KAAK,EAAE,GAAA;GACa;EAEtBP,GAAG,EAAEQ,IAAI,CAACR,GAAG;AAEbS,EAAAA,WAAW,EAAE,IAAsC;AACnDC,EAAAA,CAAC,EAAE,CAAC;AAAE;;AAEN;AACAC,EAAAA,CAAC,EAAE,CAAC;AACJC,EAAAA,CAAC,EAAE,CAAC;AAEJC,EAAAA,WAAW,EAAE,KAAK;AAClBC,EAAAA,QAAQ,EAAE,CAAC;AACXT,EAAAA,MAAM,EAAE,CAAC;AACTE,EAAAA,KAAK,EAAE,CAAC;EAERQ,KAAKA,CAACN,WAAwB,EAAE;IAC9BV,UAAU,CAACc,WAAW,GAAG,IAAI,CAAA;AAC7BG,IAAAA,GAAG,CAACC,MAAM,CAAClB,UAAU,CAACW,CAAC,CAAC,CAAA;IAExBD,WAAW,CAACV,UAAU,GAAGA,UAAU,CAAA;IACnCA,UAAU,CAACU,WAAW,GAAGA,WAAW,CAAA;AACpCV,IAAAA,UAAU,CAACe,QAAQ,GAAGf,UAAU,CAACC,GAAG,EAAE,CAAA;IACtCD,UAAU,CAACW,CAAC,GAAGM,GAAG,CAACE,OAAO,CAACnB,UAAU,CAACoB,MAAM,CAAC,CAAA;GAC9C;AAEDC,EAAAA,IAAIA,GAAG;IACLrB,UAAU,CAACc,WAAW,GAAG,KAAK,CAAA;IAC9B,IAAId,UAAU,CAACU,WAAW,EAAE;AAC1BV,MAAAA,UAAU,CAACU,WAAW,CAACV,UAAU,GAAG,IAAI,CAAA;AAC1C,KAAA;AACAiB,IAAAA,GAAG,CAACC,MAAM,CAAClB,UAAU,CAACW,CAAC,CAAC,CAAA;GACzB;AAED;AACAS,EAAAA,MAAMA,GAAG;IACP,MAAM;AAAEV,MAAAA,WAAAA;AAAY,KAAC,GAAGV,UAAU,CAAA;IAClC,MAAM;MAAEsB,YAAY;AAAEC,MAAAA,OAAAA;AAAQ,KAAC,GAAGb,WAAW,CAAA;AAC7C,IAAA,MAAMc,UAAU,GAAGd,WAAW,CAACe,QAAQ,CAACC,IAAI,CAAA;IAC5C,MAAMC,OAAO,GAAGL,YAAY,CAACK,OAAO,CAACH,UAAU,CAAC,CAACxB,UAAU,CAAA;IAC3D,MAAMO,SAAS,GAAGqB,YAAY,CAACD,OAAO,CAACpB,SAAS,EAAEe,YAAY,EAAEC,OAAO,CAAC,CAAA;AACxE,IAAA,MAAMtB,GAAG,GAAGD,UAAU,CAACC,GAAG,EAAE,CAAA;AAC5B;IACA,MAAM4B,EAAE,GAAG,CAAC5B,GAAG,GAAGD,UAAU,CAACe,QAAQ,IAAI,IAAI,CAAA;AAC7C;AACA,IAAA,MAAMe,CAAC,GAAGH,OAAO,CAACnB,KAAK,GAAGqB,EAAE,CAAA;IAE5B,IAAIC,CAAC,IAAI,CAAC,EAAE;AACV,MAAA,MAAMC,QAAQ,GAAG;AACfnB,QAAAA,CAAC,EAAEZ,UAAU,CAACY,CAAC,GAAGkB,CAAC;AACnBjB,QAAAA,CAAC,EAAEb,UAAU,CAACa,CAAC,GAAGiB,CAAAA;OACnB,CAAA;AAED,MAAA,IAAIC,QAAQ,CAACnB,CAAC,IAAImB,QAAQ,CAAClB,CAAC,EAAE;AAC5B,QAAA,MAAMmB,UAAU,GAAGC,SAAS,CAAC1B,SAAS,CAAC,CAAA;AAEvC,QAAA,IAAI2B,EAAE,CAACC,MAAM,CAAC5B,SAAS,CAAC,EAAE;UACxBA,SAAS,CAACwB,QAAQ,CAACA,QAAQ,CAACnB,CAAC,EAAEmB,QAAQ,CAAClB,CAAC,CAAC,CAAA;SAC3C,MAAM,IAAIN,SAAS,EAAE;AACpBA,UAAAA,SAAS,CAAC6B,UAAU,IAAIL,QAAQ,CAACnB,CAAC,CAAA;AAClCL,UAAAA,SAAS,CAAC8B,SAAS,IAAIN,QAAQ,CAAClB,CAAC,CAAA;AACnC,SAAA;AAEA,QAAA,MAAMyB,SAAS,GAAGL,SAAS,CAAC1B,SAAS,CAAC,CAAA;AACtC,QAAA,MAAMgC,KAAK,GAAG;AACZ3B,UAAAA,CAAC,EAAE0B,SAAS,CAAC1B,CAAC,GAAGoB,UAAU,CAACpB,CAAC;AAC7BC,UAAAA,CAAC,EAAEyB,SAAS,CAACzB,CAAC,GAAGmB,UAAU,CAACnB,CAAAA;SAC7B,CAAA;AAED,QAAA,IAAI0B,KAAK,CAAC3B,CAAC,IAAI2B,KAAK,CAAC1B,CAAC,EAAE;UACtBS,YAAY,CAACkB,IAAI,CAAC;AAChBC,YAAAA,IAAI,EAAE,YAAY;AAClBC,YAAAA,MAAM,EAAEnB,OAAO;YACfD,YAAY;YACZiB,KAAK;YACL7B,WAAW;AACXH,YAAAA,SAAAA;AACF,WAAC,CAAC,CAAA;AACJ,SAAA;AACF,OAAA;MAEAP,UAAU,CAACe,QAAQ,GAAGd,GAAG,CAAA;AAC3B,KAAA;IAEA,IAAID,UAAU,CAACc,WAAW,EAAE;AAC1BG,MAAAA,GAAG,CAACC,MAAM,CAAClB,UAAU,CAACW,CAAC,CAAC,CAAA;MACxBX,UAAU,CAACW,CAAC,GAAGM,GAAG,CAACE,OAAO,CAACnB,UAAU,CAACoB,MAAM,CAAC,CAAA;AAC/C,KAAA;GACD;AACDuB,EAAAA,KAAKA,CAACrB,YAA0B,EAAEE,UAAsB,EAAE;AAAA,IAAA,IAAAoB,qBAAA,CAAA;AACxD,IAAA,MAAMjB,OAAO,GAAGL,YAAY,CAACK,OAAO,CAAA;IAEpC,OAAAiB,CAAAA,qBAAA,GAAOjB,OAAO,CAACH,UAAU,CAAC,CAACxB,UAAU,KAAA,IAAA,GAAA,KAAA,CAAA,GAA9B4C,qBAAA,CAAgCvC,OAAO,CAAA;GAC/C;EACDwC,iBAAiBA,CAAAC,IAAA,EAMd;IAAA,IANqC;MACtCpC,WAAW;AACXqC,MAAAA,OAAAA;AAIF,KAAC,GAAAD,IAAA,CAAA;IACC,IACE,EAAEpC,WAAW,CAACsC,WAAW,EAAE,IAAIhD,UAAU,CAAC2C,KAAK,CAACjC,WAAW,CAACY,YAAY,EAAEZ,WAAW,CAACe,QAAQ,CAACC,IAAI,CAAC,CAAC,EACrG;AACA,MAAA,OAAA;AACF,KAAA;IAEA,IAAIhB,WAAW,CAACuC,UAAU,EAAE;AAC1BjD,MAAAA,UAAU,CAACY,CAAC,GAAGZ,UAAU,CAACa,CAAC,GAAG,CAAC,CAAA;AAC/B,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAIqC,GAAY,CAAA;AAChB,IAAA,IAAIC,KAAc,CAAA;AAClB,IAAA,IAAIC,MAAe,CAAA;AACnB,IAAA,IAAIC,IAAa,CAAA;IAEjB,MAAM;MAAE/B,YAAY;AAAEC,MAAAA,OAAAA;AAAQ,KAAC,GAAGb,WAAW,CAAA;AAC7C,IAAA,MAAMc,UAAU,GAAGd,WAAW,CAACe,QAAQ,CAACC,IAAI,CAAA;IAC5C,MAAMC,OAAO,GAAGL,YAAY,CAACK,OAAO,CAACH,UAAU,CAAC,CAACxB,UAAU,CAAA;IAC3D,MAAMO,SAAS,GAAGqB,YAAY,CAACD,OAAO,CAACpB,SAAS,EAAEe,YAAY,EAAEC,OAAO,CAAC,CAAA;AAExE,IAAA,IAAIW,EAAE,CAACC,MAAM,CAAC5B,SAAS,CAAC,EAAE;AACxB8C,MAAAA,IAAI,GAAGN,OAAO,CAACO,OAAO,GAAGtD,UAAU,CAACM,MAAM,CAAA;AAC1C4C,MAAAA,GAAG,GAAGH,OAAO,CAACQ,OAAO,GAAGvD,UAAU,CAACM,MAAM,CAAA;MACzC6C,KAAK,GAAGJ,OAAO,CAACO,OAAO,GAAG/C,SAAS,CAACiD,UAAU,GAAGxD,UAAU,CAACM,MAAM,CAAA;MAClE8C,MAAM,GAAGL,OAAO,CAACQ,OAAO,GAAGhD,SAAS,CAACkD,WAAW,GAAGzD,UAAU,CAACM,MAAM,CAAA;AACtE,KAAC,MAAM;AACL,MAAA,MAAMoD,IAAI,GAAGC,QAAQ,CAACC,oBAAoB,CAACrD,SAAS,CAAC,CAAA;MAErD8C,IAAI,GAAGN,OAAO,CAACO,OAAO,GAAGI,IAAI,CAACL,IAAI,GAAGrD,UAAU,CAACM,MAAM,CAAA;MACtD4C,GAAG,GAAGH,OAAO,CAACQ,OAAO,GAAGG,IAAI,CAACR,GAAG,GAAGlD,UAAU,CAACM,MAAM,CAAA;MACpD6C,KAAK,GAAGJ,OAAO,CAACO,OAAO,GAAGI,IAAI,CAACP,KAAK,GAAGnD,UAAU,CAACM,MAAM,CAAA;MACxD8C,MAAM,GAAGL,OAAO,CAACQ,OAAO,GAAGG,IAAI,CAACN,MAAM,GAAGpD,UAAU,CAACM,MAAM,CAAA;AAC5D,KAAA;AAEAN,IAAAA,UAAU,CAACY,CAAC,GAAGuC,KAAK,GAAG,CAAC,GAAGE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;AACxCrD,IAAAA,UAAU,CAACa,CAAC,GAAGuC,MAAM,GAAG,CAAC,GAAGF,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;AAExC,IAAA,IAAI,CAAClD,UAAU,CAACc,WAAW,EAAE;AAC3B;AACAd,MAAAA,UAAU,CAACM,MAAM,GAAGqB,OAAO,CAACrB,MAAM,CAAA;AAClCN,MAAAA,UAAU,CAACQ,KAAK,GAAGmB,OAAO,CAACnB,KAAK,CAAA;AAEhCR,MAAAA,UAAU,CAACgB,KAAK,CAACN,WAAW,CAAC,CAAA;AAC/B,KAAA;AACF,GAAA;AACF,CAAC,CAAA;AAEM,SAASkB,YAAYA,CAACiC,KAAU,EAAEvC,YAA0B,EAAEC,OAAgB,EAAE;EACrF,OACE,CAACW,EAAE,CAAC4B,MAAM,CAACD,KAAK,CAAC,GAAGE,qBAAqB,CAACF,KAAK,EAAEvC,YAAY,EAAEC,OAAO,CAAC,GAAGsC,KAAK,KAAKG,SAAS,CAACzC,OAAO,CAAC,CAAA;AAE1G,CAAA;AAEO,SAASU,SAASA,CAAC1B,SAAc,EAAE;AACxC,EAAA,IAAI2B,EAAE,CAACC,MAAM,CAAC5B,SAAS,CAAC,EAAE;AACxBA,IAAAA,SAAS,GAAG4B,MAAM,CAAC8B,QAAQ,CAACC,IAAI,CAAA;AAClC,GAAA;EAEA,OAAO;IAAEtD,CAAC,EAAEL,SAAS,CAAC6B,UAAU;IAAEvB,CAAC,EAAEN,SAAS,CAAC8B,SAAAA;GAAW,CAAA;AAC5D,CAAA;AAEO,SAAS8B,aAAaA,CAAC5D,SAAc,EAAE;AAC5C,EAAA,IAAI2B,EAAE,CAACC,MAAM,CAAC5B,SAAS,CAAC,EAAE;AACxBA,IAAAA,SAAS,GAAG4B,MAAM,CAAC8B,QAAQ,CAACC,IAAI,CAAA;AAClC,GAAA;EAEA,OAAO;IAAEtD,CAAC,EAAEL,SAAS,CAAC6D,WAAW;IAAEvD,CAAC,EAAEN,SAAS,CAAC8D,YAAAA;GAAc,CAAA;AAChE,CAAA;AAEO,SAASC,kBAAkBA,CAAAC,KAAA,EAQhCC,IAAS,EACT;EAAA,IARA;IACE9D,WAAW;AACXa,IAAAA,OAAAA;AAIF,GAAC,GAAAgD,KAAA,CAAA;AAGD,EAAA,MAAME,aAAa,GAAG/D,WAAW,IAAIA,WAAW,CAACY,YAAY,CAACK,OAAO,CAACjB,WAAW,CAACe,QAAQ,CAACC,IAAI,CAAC,CAAC1B,UAAU,CAAA;AAE3G,EAAA,IAAI,CAACyE,aAAa,IAAI,CAACA,aAAa,CAACpE,OAAO,EAAE;AAC5CmE,IAAAA,IAAI,EAAE,CAAA;IACN,OAAO;AAAE5D,MAAAA,CAAC,EAAE,CAAC;AAAEC,MAAAA,CAAC,EAAE,CAAA;KAAG,CAAA;AACvB,GAAA;AAEA,EAAA,MAAM6D,eAAe,GAAG9C,YAAY,CAAC6C,aAAa,CAAClE,SAAS,EAAEG,WAAW,CAACY,YAAY,EAAEC,OAAO,CAAC,CAAA;AAEhG,EAAA,MAAMoD,QAAQ,GAAG1C,SAAS,CAACyC,eAAe,CAAC,CAAA;AAC3CF,EAAAA,IAAI,EAAE,CAAA;AACN,EAAA,MAAMI,OAAO,GAAG3C,SAAS,CAACyC,eAAe,CAAC,CAAA;EAE1C,OAAO;AACL9D,IAAAA,CAAC,EAAEgE,OAAO,CAAChE,CAAC,GAAG+D,QAAQ,CAAC/D,CAAC;AACzBC,IAAAA,CAAC,EAAE+D,OAAO,CAAC/D,CAAC,GAAG8D,QAAQ,CAAC9D,CAAAA;GACzB,CAAA;AACH,CAAA;AAEA,MAAMgE,gBAAwB,GAAG;AAC/BC,EAAAA,EAAE,EAAE,aAAa;EACjBlF,OAAO;AACPmF,EAAAA,SAAS,EAAE;IACT,kBAAkB,EAAEC,KAAA,IAAqB;MAAA,IAApB;AAAEtE,QAAAA,WAAAA;AAAY,OAAC,GAAAsE,KAAA,CAAA;MAClCtE,WAAW,CAACV,UAAU,GAAG,IAAI,CAAA;KAC9B;IAED,sBAAsB,EAAEiF,KAAA,IAAqB;MAAA,IAApB;AAAEvE,QAAAA,WAAAA;AAAY,OAAC,GAAAuE,KAAA,CAAA;MACtCvE,WAAW,CAACV,UAAU,GAAG,IAAI,CAAA;MAC7BA,UAAU,CAACqB,IAAI,EAAE,CAAA;MACjB,IAAIrB,UAAU,CAACU,WAAW,EAAE;QAC1BV,UAAU,CAACU,WAAW,GAAG,IAAI,CAAA;AAC/B,OAAA;KACD;IAED,mBAAmB,EAAEV,UAAU,CAACqB,IAAI;AAEpC,IAAA,0BAA0B,EAAG6D,GAAQ,IAAKlF,UAAU,CAAC6C,iBAAiB,CAACqC,GAAG,CAAA;AAC5E,GAAA;AACF;;;;"}