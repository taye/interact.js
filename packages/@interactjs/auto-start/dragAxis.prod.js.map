{"version":3,"file":"dragAxis.prod.js","sources":["dragAxis.ts"],"sourcesContent":["import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { SignalArgs, Scope } from '@interactjs/core/scope'\nimport type { ActionName, Element } from '@interactjs/core/types'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart({ interaction, eventTarget, dx, dy }: SignalArgs['interactions:move'], scope: Scope) {\n  if (interaction.prepared.name !== 'drag') return\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy'\n\n  interaction.prepared.axis =\n    targetOptions.lockAxis === 'start'\n      ? (currentAxis[0] as 'x' | 'y') // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    ;(interaction as Interaction<ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Element\n\n    const getDraggable = function (interactable: Interactable): Interactable | void {\n      if (interactable === interaction.interactable) return\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart && interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer,\n          interaction.downEvent,\n          interaction,\n          element,\n        )\n\n        if (\n          action &&\n          action.name === 'drag' &&\n          checkStartAxis(currentAxis, interactable) &&\n          autoStart.validateAction(action, interactable, element, eventTarget, scope)\n        ) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        ;(interaction as Interaction<ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Element\n    }\n  }\n}\n\nfunction checkStartAxis(startAxis: string, interactable: Interactable) {\n  if (!interactable) {\n    return false\n  }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n"],"names":["interaction","eventTarget","dx","dy","_ref","prepared","name","absX","Math","abs","absY","interactable","options","drag","targetOptions","startAxis","axis","currentAxis","lockAxis","element","getDraggable","manualStart","getAction","downPointer","action","checkStartAxis","autoStart","scope","is","interactables","forEachMatch","parentNode","thisAxis","dragAxis","id","beforeStart"],"mappings":";;0PASA,IAAAA,YAAqBA,EAAAC,YAAED,EAAWE,GAAED,EAAWE,GAAED,GAAIC,EAAqC,GAAA,SAAAC,EAAAC,SAAAC,KAAA,OAGxF,MAAAC,EAAAC,KAAAC,IAAAP,GACMK,EAAOC,KAAKC,IAAIP,GAChBQ,EAAgBP,EAAGQ,aAAAC,QAAAC,KACnBC,EAAaA,EAAcC,UAC3BA,EAAyBR,EAAAG,QAAUA,EAAA,IAAA,KAQzC,GAPAV,EAAiBK,SAAOW,KAAiC,YAAjBT,SAAwBU,EAAA,GAErDH,EAASI,SAKpB,OAAAD,GAAA,OAAAF,GAAAA,IAAAE,EAAA,CACIA,EAAAA,SAAgBX,KAAQS,KAI1B,IAAAI,EAAAlB,EACA,MAAIkB,EAAUlB,SAAsBU,GAE9BS,GAAAA,IAAepB,eAA2D,OAC9E,MAAgBY,EAAAZ,eAAiBW,QAAcE,KAE/C,IAAAD,EAAaS,aAAeV,EAAaC,gBAAYA,EAAAO,EAAAlB,GAAA,OAEhDW,EAAQS,EAA2BC,UAAAtB,EAAgBuB,YAAUJ,EAASlB,UAAcD,EAAAmB,GACvF,MAA4BG,SAAhBE,QACCC,iBACXzB,IAAqB0B,yBAGtBF,EAAAb,EAAAQ,EAAAlB,EAAA0B,GAGCH,OAAAA,CAMF,CACF,EAGF,KAAAI,GAAAT,QAAAA,IAAA,OACSR,EAASQ,EAAUU,cAAAC,aAAAX,EAAAC,GAC1B,GAAMT,EAAY,CAElBX,WAAkBM,KAAA,OACdN,EAAwCK,aAAaM,EACvDX,EAAYW,QAAYQ,EACxBnB,KACA,CACFmB,EAAAY,WAAAZ,EAEAA,CACF,CACF,CACF,SAAAM,eAAAV,EAAAJ,GAEA,IAAAA,EACE,OAAKA,EAEL,MAAAqB,EAAArB,EAAAC,QAAAC,KAAAE,UAEA,MAA6B,OAAfA,GAA4B,OAAbiB,GAAcjB,IAASA,EAGtD,IAAAkB,SAAA,CAEeC,GAAA,sBACbA,UAAyB,0BACdC,qBACZF"}