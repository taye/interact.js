{"version":3,"file":"InteractableSet.js","sources":["InteractableSet.ts"],"sourcesContent":["import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target } from '@interactjs/core/types'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: Interactable[]\n  } = {}\n\n  scope: Scope\n\n  constructor(scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target } = interactable\n        const interactablesOnTarget: Interactable[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(interactablesOnTarget, (i) => i === interactable)\n        interactablesOnTarget.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new(target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(interactable)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(interactable)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  getExisting(target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const interactablesOnTarget: Interactable[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!interactablesOnTarget) return undefined\n\n    return arr.find(\n      interactablesOnTarget,\n      (interactable) =>\n        interactable._context === context && (isSelector || interactable.inContext(target as any)),\n    )\n  }\n\n  forEachMatch<T>(node: Node, callback: (interactable: Interactable) => T): T | void {\n    for (const interactable of this.list) {\n      let ret: T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n            is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n            node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n"],"names":["InteractableSet","list","selectorMap","scope","constructor","addListeners","_ref","interactable","target","interactablesOnTarget","is","string","id","targetIndex","arr","findIndex","i","splice","new","options","extend","actions","Interactable","document","events","addDocument","_doc","push","Object","defineProperty","value","configurable","fire","win","_win","getExisting","context","isSelector","undefined","find","_context","inContext","forEachMatch","node","callback","ret","element","domUtils","matchesSelector"],"mappings":"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"}