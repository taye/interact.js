{"version":3,"file":"domUtils.js","sources":["domUtils.ts"],"sourcesContent":["import type { Rect, Target, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains(parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest(element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode(node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector(element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement(elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents(node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan(higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo(element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement(element: Element) {\n  return (element as any).correspondingUseElement || element\n}\n\nexport function getScrollXY(relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect(element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect(element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath(node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector(value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n"],"names":["nodeContains","parent","child","contains","parentNode","closest","element","selector","is","matchesSelector","node","docFrag","host","win","replace","browser","prefixedMatchesSelector","getParent","el","indexOfDeepestElement","elements","deepestNodeParents","deepestNodeIndex","i","length","currentNode","deepestNode","currentNodeParent","deepestNodeParent","ownerDocument","zIndexIsHigherThan","getNodeParents","ancestryStart","domObjects","HTMLElement","SVGElement","SVGSVGElement","ownerSVGElement","currentNodeParents","commonIndex","parents","lastChild","previousSibling","limit","parentParent","unshift","higherNode","lowerNode","higherIndex","parseInt","getComputedStyle","zIndex","lowerIndex","matchesUpTo","getActualElement","correspondingUseElement","getScrollXY","relevantWindow","x","scrollX","document","documentElement","scrollLeft","y","scrollY","scrollTop","getElementClientRect","clientRect","getBoundingClientRect","getClientRects","left","right","top","bottom","width","height","getElementRect","isIOS7","scroll","getPath","path","push","trySelector","value","string","querySelector"],"mappings":"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"}