{"version":3,"file":"pointer.prod.js","sources":["pointer.ts"],"sourcesContent":["import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule, ModifierState } from '../types'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\n  RestrictOptions,\n  {\n    offset: Rect\n  }\n>\n\nfunction start({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect(\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n"],"names":["start","rect","startOffset","state","interaction","pageCoords","options","elementRect","extend","offset","left","top","right","bottom","restriction","width","widthDiff","heightDiff","set","_ref2","coords","getRestrictionRect","rectUtils","xywhToTlbr","min","x","Math","max","y","value","is","resolveRectLike","interactable","element","defaults","endOnly","restrict","restrict$1","makeModifier"],"mappings":";;uQA2BSA,IAAAA,KAAMC,EAAAC,YAAED,EAAIE,MAAED,EAAWE,YAAED,EAAKE,WAAED,GAAaC,EAAwC,cACxFC,GAAEA,eACFC,GAAEA,IAAuBC,OAAA,CACzBC,KAAAA,EAEFC,MACAC,MAAM,EACNC,OAAQ,GACRC,EAAQJ,QAAA,CAAA,GACV,GACOR,KACR,CAEGA,MAAIa,EAAIP,mBAAaD,EAAAQ,YAAAV,EAAAC,GACvB,GAAMS,EAAW,CAEjB,QAAiBA,EAAAF,MAAAE,EAAAJ,KAAAT,EAAAc,MACTC,EAAYF,EAAiBD,OAAcC,EAAKH,IAAOV,SACvDgB,EAAU,IAEZD,EAAAA,MAAaA,EACfP,EAAOC,UAETO,EAAA,IACIA,EAAAA,KAAaA,EACfR,EAAOE,UAET,CACFF,EAAAC,MAAAR,EAAAQ,KAAAT,EAAAc,MAAAR,EAAAG,KAEAD,EAAOC,KAAIR,EAAeS,IAAQV,EAAAA,OAAUM,EAAcI,IAC1DF,EAAOE,SAAmBA,MAAUV,EAAOc,OAAc,EAAAR,EAAIK,OAE7DH,EAAOG,QAAoBV,SAASD,EAAKc,QAAU,IAAeH,OAClEH,CACFN,EAAAM,OAAAA,EAGF,SAAAS,IAAAC,GAESD,IAAAA,OAAIE,EAAAhB,YAAEgB,EAAMjB,MAAEC,GAAaD,EAAmC,cAC/DG,EAAAG,OAAEH,GAASG,IAAgBY,mBAAAf,EAAAQ,YAAAV,EAAAgB,GAEjC,IAAMN,EAAcO,OAEpB,MAAgBpB,EAAAqB,UAAEC,WAAAT,GAElBM,IAAaE,KAAAA,IAAAA,KAAoBE,IAAAvB,EAACa,MAAWL,EAACG,MAAAQ,EAAAK,GAAAxB,EAAAS,KAAAD,EAAAC,MAE9CU,EAAOK,EAAIC,KAAKC,IAAID,KAAKF,IAAIvB,EAAKW,OAAcH,EAAMI,OAAQO,EAAGQ,GAAM3B,MAAQQ,EAAOC,IACtFU,CACF,SAAAC,mBAAAQ,EAAAzB,EAAAgB,GAEO,OAAAU,GAAST,kBAKMU,gBAAAF,EAAAzB,EAAA4B,aAAA5B,EAAA6B,QAAA,CAAAb,EAAAK,EAAAL,EAAAQ,EAAAxB,IAMbkB,UAAAS,gBAAAF,EAAAzB,EAAA4B,aAAA5B,EAAA6B,QAEP,CACF,MAAAC,SAAA,CAEApB,YAAkC,KAChCA,YAAa,KACbP,OAAAA,KACAE,SAAY,EACZ0B,SAAS,GAEVC,SAAA,CAEDpC,YACEA,QACAkB,mBAEF,IAACmB,WAAAC,aAAAF,SAAA,mBAEDC,sBAAoChB,mBAAae"}