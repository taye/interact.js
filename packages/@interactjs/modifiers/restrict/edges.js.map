{"version":3,"file":"edges.js","sources":["edges.ts"],"sourcesContent":["// This modifier adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\n  RestrictEdgesOptions,\n  {\n    inner: Rect\n    outer: Rect\n    offset: RestrictEdgesOptions['offset']\n  }\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect(rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n"],"names":["noInner","top","Infinity","left","bottom","right","noOuter","start","_ref","interaction","startOffset","state","options","offset","offsetRect","getRestrictionRect","coords","page","rectUtils","rectToXY","x","y","set","_ref2","edges","extend","inner","outer","fixRect","Math","min","max","rect","defaults","edge","endOnly","enabled","restrictEdges","makeModifier"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA6BA,MAAMA,OAAO,GAAG;EAAEC,GAAG,EAAE,CAACC,QAAQ;EAAEC,IAAI,EAAE,CAACD,QAAQ;EAAEE,MAAM,EAAE,CAACF,QAAQ;AAAEG,EAAAA,KAAK,EAAE,CAACH,QAAAA;AAAS,CAAC,CAAA;AACxF,MAAMI,OAAO,GAAG;EAAEL,GAAG,EAAE,CAACC,QAAQ;EAAEC,IAAI,EAAE,CAACD,QAAQ;EAAEE,MAAM,EAAE,CAACF,QAAQ;AAAEG,EAAAA,KAAK,EAAE,CAACH,QAAAA;AAAS,CAAC,CAAA;AAExF,SAASK,KAAKA,CAAAC,IAAA,EAAuE;EAAA,IAAtE;IAAEC,WAAW;IAAEC,WAAW;AAAEC,IAAAA,KAAAA;AAAuC,GAAC,GAAAH,IAAA,CAAA;EACjF,MAAM;AAAEI,IAAAA,OAAAA;AAAQ,GAAC,GAAGD,KAAK,CAAA;AACzB,EAAA,IAAIE,MAAa,CAAA;AAEjB,EAAA,IAAID,OAAO,EAAE;AACX,IAAA,MAAME,UAAU,GAAGC,kBAAkB,CAACH,OAAO,CAACC,MAAM,EAAEJ,WAAW,EAAEA,WAAW,CAACO,MAAM,CAACT,KAAK,CAACU,IAAI,CAAC,CAAA;AAEjGJ,IAAAA,MAAM,GAAGK,SAAS,CAACC,QAAQ,CAACL,UAAU,CAAC,CAAA;AACzC,GAAA;EAEAD,MAAM,GAAGA,MAAM,IAAI;AAAEO,IAAAA,CAAC,EAAE,CAAC;AAAEC,IAAAA,CAAC,EAAE,CAAA;GAAG,CAAA;EAEjCV,KAAK,CAACE,MAAM,GAAG;AACbZ,IAAAA,GAAG,EAAEY,MAAM,CAACQ,CAAC,GAAGX,WAAW,CAACT,GAAG;AAC/BE,IAAAA,IAAI,EAAEU,MAAM,CAACO,CAAC,GAAGV,WAAW,CAACP,IAAI;AACjCC,IAAAA,MAAM,EAAES,MAAM,CAACQ,CAAC,GAAGX,WAAW,CAACN,MAAM;AACrCC,IAAAA,KAAK,EAAEQ,MAAM,CAACO,CAAC,GAAGV,WAAW,CAACL,KAAAA;GAC/B,CAAA;AACH,CAAA;AAEA,SAASiB,GAAGA,CAAAC,KAAA,EAAyE;EAAA,IAAxE;IAAEP,MAAM;IAAEQ,KAAK;IAAEf,WAAW;AAAEE,IAAAA,KAAAA;AAAuC,GAAC,GAAAY,KAAA,CAAA;EACjF,MAAM;IAAEV,MAAM;AAAED,IAAAA,OAAAA;AAAQ,GAAC,GAAGD,KAAK,CAAA;EAEjC,IAAI,CAACa,KAAK,EAAE;AACV,IAAA,OAAA;AACF,GAAA;EAEA,MAAMP,IAAI,GAAGQ,MAAM,CAAC,EAAE,EAAET,MAAM,CAAC,CAAA;AAC/B,EAAA,MAAMU,KAAK,GAAGX,kBAAkB,CAACH,OAAO,CAACc,KAAK,EAAEjB,WAAW,EAAEQ,IAAI,CAAC,IAAK,EAAW,CAAA;AAClF,EAAA,MAAMU,KAAK,GAAGZ,kBAAkB,CAACH,OAAO,CAACe,KAAK,EAAElB,WAAW,EAAEQ,IAAI,CAAC,IAAK,EAAW,CAAA;AAElFW,EAAAA,OAAO,CAACF,KAAK,EAAE1B,OAAO,CAAC,CAAA;AACvB4B,EAAAA,OAAO,CAACD,KAAK,EAAErB,OAAO,CAAC,CAAA;EAEvB,IAAIkB,KAAK,CAACvB,GAAG,EAAE;AACbe,IAAAA,MAAM,CAACK,CAAC,GAAGQ,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACJ,KAAK,CAAC1B,GAAG,GAAGY,MAAM,CAACZ,GAAG,EAAEgB,IAAI,CAACI,CAAC,CAAC,EAAEK,KAAK,CAACzB,GAAG,GAAGY,MAAM,CAACZ,GAAG,CAAC,CAAA;AACvF,GAAC,MAAM,IAAIuB,KAAK,CAACpB,MAAM,EAAE;AACvBY,IAAAA,MAAM,CAACK,CAAC,GAAGQ,IAAI,CAACE,GAAG,CAACF,IAAI,CAACC,GAAG,CAACH,KAAK,CAACvB,MAAM,GAAGS,MAAM,CAACT,MAAM,EAAEa,IAAI,CAACI,CAAC,CAAC,EAAEK,KAAK,CAACtB,MAAM,GAAGS,MAAM,CAACT,MAAM,CAAC,CAAA;AACnG,GAAA;EACA,IAAIoB,KAAK,CAACrB,IAAI,EAAE;AACda,IAAAA,MAAM,CAACI,CAAC,GAAGS,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACJ,KAAK,CAACxB,IAAI,GAAGU,MAAM,CAACV,IAAI,EAAEc,IAAI,CAACG,CAAC,CAAC,EAAEM,KAAK,CAACvB,IAAI,GAAGU,MAAM,CAACV,IAAI,CAAC,CAAA;AAC3F,GAAC,MAAM,IAAIqB,KAAK,CAACnB,KAAK,EAAE;AACtBW,IAAAA,MAAM,CAACI,CAAC,GAAGS,IAAI,CAACE,GAAG,CAACF,IAAI,CAACC,GAAG,CAACH,KAAK,CAACtB,KAAK,GAAGQ,MAAM,CAACR,KAAK,EAAEY,IAAI,CAACG,CAAC,CAAC,EAAEM,KAAK,CAACrB,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAAC,CAAA;AAC/F,GAAA;AACF,CAAA;AAEA,SAASuB,OAAOA,CAACI,IAAU,EAAEC,QAAc,EAAE;AAC3C,EAAA,KAAK,MAAMC,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,EAAE;AACrD,IAAA,IAAI,EAAEA,IAAI,IAAIF,IAAI,CAAC,EAAE;AACnBA,MAAAA,IAAI,CAACE,IAAI,CAAC,GAAGD,QAAQ,CAACC,IAAI,CAAC,CAAA;AAC7B,KAAA;AACF,GAAA;AAEA,EAAA,OAAOF,IAAI,CAAA;AACb,CAAA;AAEA,MAAMC,QAA8B,GAAG;AACrCP,EAAAA,KAAK,EAAE,IAAI;AACXC,EAAAA,KAAK,EAAE,IAAI;AACXd,EAAAA,MAAM,EAAE,IAAI;AACZsB,EAAAA,OAAO,EAAE,KAAK;AACdC,EAAAA,OAAO,EAAE,KAAA;AACX,CAAC,CAAA;AAED,MAAMC,aAAa,GAAG;EACpBrC,OAAO;EACPM,OAAO;EACPC,KAAK;EACLe,GAAG;AACHW,EAAAA,QAAAA;AACF,EAAC;AAED,sBAAeK,YAAY,CAACD,aAAa,EAAE,eAAe,CAAC;;;;"}